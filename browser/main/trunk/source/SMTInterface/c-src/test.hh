/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class local_stalin_nativez3_Z3Context */

#ifndef _Included_local_stalin_nativez3_Z3Context
#define _Included_local_stalin_nativez3_Z3Context
#ifdef __cplusplus
extern "C" {
#endif
#undef local_stalin_nativez3_Z3Context_Z3UNSAT
#define local_stalin_nativez3_Z3Context_Z3UNSAT -1L
#undef local_stalin_nativez3_Z3Context_Z3UNKNOWN
#define local_stalin_nativez3_Z3Context_Z3UNKNOWN 0L
#undef local_stalin_nativez3_Z3Context_Z3SAT
#define local_stalin_nativez3_Z3Context_Z3SAT 1L
#undef local_stalin_nativez3_Z3Context_Z3_NO_FAILURE
#define local_stalin_nativez3_Z3Context_Z3_NO_FAILURE 0L
#undef local_stalin_nativez3_Z3Context_Z3_UNKNOWN
#define local_stalin_nativez3_Z3Context_Z3_UNKNOWN 1L
#undef local_stalin_nativez3_Z3Context_Z3_TIMEOUT
#define local_stalin_nativez3_Z3Context_Z3_TIMEOUT 2L
#undef local_stalin_nativez3_Z3Context_Z3_MEMOUT_WATERMARK
#define local_stalin_nativez3_Z3Context_Z3_MEMOUT_WATERMARK 3L
#undef local_stalin_nativez3_Z3Context_Z3_CANCELED
#define local_stalin_nativez3_Z3Context_Z3_CANCELED 4L
#undef local_stalin_nativez3_Z3Context_Z3_NUM_CONFLICTS
#define local_stalin_nativez3_Z3Context_Z3_NUM_CONFLICTS 5L
#undef local_stalin_nativez3_Z3Context_Z3_THEORY
#define local_stalin_nativez3_Z3Context_Z3_THEORY 6L
#undef local_stalin_nativez3_Z3Context_Z3_QUANTIFIERS
#define local_stalin_nativez3_Z3Context_Z3_QUANTIFIERS 7L
/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    initZ3
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Context_initZ3
  (JNIEnv *, jobject, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    deinitializeZ3
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Context_deinitializeZ3
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    push
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Context_push
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    pop
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Context_pop
  (JNIEnv *, jobject, jint);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    check
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_local_stalin_nativez3_Z3Context_check
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    checkAndGetProof
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_local_stalin_nativez3_Z3Context_checkAndGetProof
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Context
 * Method:    cancelCheck
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Context_cancelCheck
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class local_stalin_nativez3_Z3Config */

#ifndef _Included_local_stalin_nativez3_Z3Config
#define _Included_local_stalin_nativez3_Z3Config
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     local_stalin_nativez3_Z3Config
 * Method:    loadcache
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Config_loadcache
  (JNIEnv *, jclass);

/*
 * Class:     local_stalin_nativez3_Z3Config
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Config_initialize
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Config
 * Method:    deinitize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Config_deinitize
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Config
 * Method:    setConfig
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Config_setConfig
  (JNIEnv *, jobject, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class local_stalin_nativez3_Z3Config_Z3ConfigModel */

#ifndef _Included_local_stalin_nativez3_Z3Config_Z3ConfigModel
#define _Included_local_stalin_nativez3_Z3Config_Z3ConfigModel
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class local_stalin_nativez3_Z3Config_Z3ConfigModelProof */

#ifndef _Included_local_stalin_nativez3_Z3Config_Z3ConfigModelProof
#define _Included_local_stalin_nativez3_Z3Config_Z3ConfigModelProof
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class local_stalin_nativez3_Z3Config_Z3ConfigProof */

#ifndef _Included_local_stalin_nativez3_Z3Config_Z3ConfigProof
#define _Included_local_stalin_nativez3_Z3Config_Z3ConfigProof
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class local_stalin_nativez3_Z3Parser */

#ifndef _Included_local_stalin_nativez3_Z3Parser
#define _Included_local_stalin_nativez3_Z3Parser
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    init
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Parser_init
  (JNIEnv *, jobject, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    deinit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Parser_deinit
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    createusort
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_createusort
  (JNIEnv *, jobject, jstring);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    createintsort
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_createintsort
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    createrealsort
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_createrealsort
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    createboolsort
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_createboolsort
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    createfunc
 * Signature: (Ljava/lang/String;[JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_createfunc
  (JNIEnv *, jobject, jstring, jlongArray, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkfalse
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkfalse
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mktrue
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mktrue
  (JNIEnv *, jobject);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkapp
 * Signature: (J[J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkapp
  (JNIEnv *, jobject, jlong, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkeq
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkeq
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkdistinct
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkdistinct
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mknot
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mknot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkite
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkite
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkiff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkiff
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkimplies
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkimplies
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkxor
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkxor
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkandn
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkandn
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkorn
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkorn
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkaddn
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkaddn
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkmuln
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkmuln
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mksubn
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mksubn
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkdiv
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkdiv
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkuminus
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkuminus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mklt
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mklt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkle
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkle
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkgt
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkgt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkge
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkge
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mknumeral
 * Signature: (Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mknumeral
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkquantifier
 * Signature: (Z[J[J[Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkquantifier
  (JNIEnv *, jobject, jboolean, jlongArray, jlongArray, jobjectArray, jlong);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    mkpattern
 * Signature: ([J)J
 */
JNIEXPORT jlong JNICALL Java_local_stalin_nativez3_Z3Parser_mkpattern
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     local_stalin_nativez3_Z3Parser
 * Method:    assertast
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_local_stalin_nativez3_Z3Parser_assertast
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
