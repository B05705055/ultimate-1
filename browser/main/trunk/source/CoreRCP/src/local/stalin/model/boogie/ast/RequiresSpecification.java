/* RequiresSpecification -- Automatically generated by TreeBuilder */

package local.stalin.model.boogie.ast;

import java.util.List;
/**
 * Represents a requires specification which is a special form of a specification.
 */
public class RequiresSpecification extends Specification {
    private static final long serialVersionUID = 1L;
    /**
     * The formula of this requires specification.
     */
    Expression formula;

    /**
     * The constructor taking initial values.
     * @param filename the filename of this specification.
     * @param lineNr the line nr of this specification.
     * @param isFree true iff this specification is free.
     * @param formula the formula of this requires specification.
     */
    public RequiresSpecification(String filename, int lineNr, boolean isFree, Expression formula) {
        super(filename, lineNr, isFree);
        this.formula = formula;
    }

    /**
     * Returns a textual description of this object.
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append("RequiresSpecification").append('[');
        sb.append(formula);
        return sb.append(']').toString();
    }

    /**
     * Gets the formula of this requires specification.
     * @return the formula of this requires specification.
     */
    public Expression getFormula() {
        return formula;
    }

    public List<Object> getChildren() {
        List<Object> children = super.getChildren();
        children.add(formula);
        return children;
    }
}
