/* AssignmentStatement -- Automatically generated by TreeBuilder */

package local.stalin.model.boogie.ast;

import java.util.List;
/**
 * Represents a assignment statement which is a special form of a statement.
 */
public class AssignmentStatement extends Statement {
    private static final long serialVersionUID = 1L;
    /**
     * The lhs of this assignment statement.
     */
    LeftHandSide[] lhs;

    /**
     * The rhs of this assignment statement.
     */
    Expression[] rhs;

    /**
     * The constructor taking initial values.
     * @param filename the filename of this statement.
     * @param lineNr the line nr of this statement.
     * @param lhs the lhs of this assignment statement.
     * @param rhs the rhs of this assignment statement.
     */
    public AssignmentStatement(String filename, int lineNr, LeftHandSide[] lhs, Expression[] rhs) {
        super(filename, lineNr);
        this.lhs = lhs;
        this.rhs = rhs;
    }

    /**
     * Returns a textual description of this object.
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append("AssignmentStatement").append('[');
        if (lhs == null) {
            sb.append("null");
        } else {
            sb.append('[');
            for(int i1 = 0; i1 < lhs.length; i1++) {
                if (i1 > 0) sb.append(',');
                    sb.append(lhs[i1]);
            }
            sb.append(']');
        }
        sb.append(',');
        if (rhs == null) {
            sb.append("null");
        } else {
            sb.append('[');
            for(int i1 = 0; i1 < rhs.length; i1++) {
                if (i1 > 0) sb.append(',');
                    sb.append(rhs[i1]);
            }
            sb.append(']');
        }
        return sb.append(']').toString();
    }

    /**
     * Gets the lhs of this assignment statement.
     * @return the lhs of this assignment statement.
     */
    public LeftHandSide[] getLhs() {
        return lhs;
    }

    /**
     * Gets the rhs of this assignment statement.
     * @return the rhs of this assignment statement.
     */
    public Expression[] getRhs() {
        return rhs;
    }

    public List<Object> getChildren() {
        List<Object> children = super.getChildren();
        children.add(lhs);
        children.add(rhs);
        return children;
    }
}
