/* BreakStatement -- Automatically generated by TreeBuilder */

package local.stalin.model.boogie.ast;

import java.util.List;
/**
 * Represents a break statement which is a special form of a statement.
 */
public class BreakStatement extends Statement {
    private static final long serialVersionUID = 1L;
    /**
     * The label. If null breaks the immediate surrounding while loop.
     */
    String label;

    /**
     * The constructor taking initial values.
     * @param filename the filename of this statement.
     * @param lineNr the line nr of this statement.
     */
    public BreakStatement(String filename, int lineNr) {
        super(filename, lineNr);
    }

    /**
     * The constructor taking initial values.
     * @param filename the filename of this statement.
     * @param lineNr the line nr of this statement.
     * @param label the label.
     */
    public BreakStatement(String filename, int lineNr, String label) {
        super(filename, lineNr);
        this.label = label;
    }

    /**
     * Returns a textual description of this object.
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append("BreakStatement").append('[');
        sb.append(label);
        return sb.append(']').toString();
    }

    /**
     * Gets the label. If null breaks the immediate surrounding while loop.
     * @return the label.
     */
    public String getLabel() {
        return label;
    }

    public List<Object> getChildren() {
        List<Object> children = super.getChildren();
        children.add(label);
        return children;
    }
}
