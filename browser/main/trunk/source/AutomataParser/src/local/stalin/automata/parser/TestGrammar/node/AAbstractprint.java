/* This file was generated by SableCC (http://www.sablecc.org/). */

package local.stalin.automata.parser.TestGrammar.node;

import local.stalin.automata.parser.TestGrammar.analysis.*;

@SuppressWarnings("nls")
public final class AAbstractprint extends PAbstractprint
{
    private PAbstractjoinedautomaton _automaton_;

    public AAbstractprint()
    {
        // Constructor
    }

    public AAbstractprint(
        @SuppressWarnings("hiding") PAbstractjoinedautomaton _automaton_)
    {
        // Constructor
        setAutomaton(_automaton_);

    }

    @Override
    public Object clone()
    {
        return new AAbstractprint(
            cloneNode(this._automaton_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAbstractprint(this);
    }

    public PAbstractjoinedautomaton getAutomaton()
    {
        return this._automaton_;
    }

    public void setAutomaton(PAbstractjoinedautomaton node)
    {
        if(this._automaton_ != null)
        {
            this._automaton_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._automaton_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._automaton_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._automaton_ == child)
        {
            this._automaton_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._automaton_ == oldChild)
        {
            setAutomaton((PAbstractjoinedautomaton) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
