<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename local variable &apos;i&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.process(...)&apos; to &apos;j&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.process(IElement).i&apos;&#x0A;- Renamed element: &apos;i&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;i&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~process~QIElement;@i!5564!5572!5568!5568!I" name="j" references="true" stamp="1303115736337" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;openNodes&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.buildGraph(...)&apos; to &apos;openEdges&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.buildGraph(String, HashSet&lt;INode&gt;, INode).openNodes&apos;&#x0A;- Renamed element: &apos;openNodes&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;openNodes&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphOutputter.java[GraphOutputter~buildGraph~QString;~QHashSet\&lt;QINode;&gt;;~QINode;@openNodes!734!785!751!759!QArrayList\&lt;QINode;&gt;;" name="openEdges" references="true" stamp="1303121100826" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;Assumption&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.buildGraph(...)&apos; to &apos;assumption&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.buildGraph(StringBuilder, HashSet&lt;INode&gt;, INode).Assumption&apos;&#x0A;- Renamed element: &apos;Assumption&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;Assumption&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphOutputter.java[GraphOutputter~buildGraph~QStringBuilder;~QHashSet\&lt;QINode;&gt;;~QINode;@Assumption!1470!1514!1478!1487!QFormula;" name="assumption" references="true" stamp="1303122204638" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;assumption&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.convertNodeName(...)&apos; to &apos;assertion&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter.convertNodeName(INode).assumption&apos;&#x0A;- Renamed element: &apos;assumption&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;assumption&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphOutputter.java[GraphOutputter~convertNodeName~QINode;@assumption!2356!2399!2364!2373!QFormula;" name="assertion" references="true" stamp="1303129450777" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter&apos; to &apos;GraphWriter&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphOutputter&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;GraphOutputter&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphOutputter.java[GraphOutputter" matchStrategy="1" name="GraphWriter" qualified="false" references="true" similarDeclarations="false" stamp="1303154183010" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;src&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.build_graph(...)&apos; to &apos;nextNode&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.build_graph(INode).src&apos;&#x0A;- Renamed element: &apos;src&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;src&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphWriter.java[GraphWriter~build_graph~QINode;@src!2103!2128!2109!2111!QINode;" name="nextNode" references="true" stamp="1303200784497" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.build_graph(...)&apos; to &apos;collectNodes&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.build_graph(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.collectNodes(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;build_graph&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphWriter.java[GraphWriter~build_graph~QINode;" name="collectNodes" references="true" stamp="1303200915257" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;line&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.convertEdgeName(...)&apos; to &apos;edgeName&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.convertEdgeName(IEdge).line&apos;&#x0A;- Renamed element: &apos;line&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;line&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphWriter.java[GraphWriter~convertEdgeName~QIEdge;@line!5119!5159!5133!5136!QStringBuilder;" name="edgeName" references="true" stamp="1303202005401" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.getNodeLabel(...)&apos; to &apos;getLabeledNode&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.getNodeLabel(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.GraphWriter.getLabeledNode(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getNodeLabel&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{GraphWriter.java[GraphWriter~getNodeLabel~QINode;" name="getLabeledNode" references="true" stamp="1303205601326" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.CFGExplicitNode.java&apos;" description="Delete element" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{CFGExplicitNode.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1303285278679" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.CFGEdge.java&apos;" description="Delete element" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{CFGEdge.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1303285285790" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.SMTNodeAnnotations.java&apos;" description="Delete element" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{SMTNodeAnnotations.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1303285293645" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;assertion&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(...)&apos; to &apos;formula&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(Formula).assertion&apos;&#x0A;- Renamed element: &apos;assertion&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;assertion&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFreeVariables~QFormula;@assertion!21381!21397!21389!21397!QFormula;" name="formula" references="true" stamp="1303291330943" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;assertion&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(...)&apos; to &apos;formula&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(Formula).assertion&apos;&#x0A;- Renamed element: &apos;assertion&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;assertion&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFreeVariables~QFormula;@assertion!24602!24618!24610!24618!QFormula;" name="formula" references="true" stamp="1303291450716" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;toReturn&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(...)&apos; to &apos;set&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFreeVariables(Term[]).toReturn&apos;&#x0A;- Renamed element: &apos;toReturn&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;toReturn&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFreeVariables~\[QTerm;@toReturn!24787!24847!24809!24816!QHashSet\&lt;QTermVariable;&gt;;" name="set" references="true" stamp="1303293034999" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalker&apos; to &apos;MyFormulaWalker&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalker&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;FormulaWalker&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalker.java[FormulaWalker" matchStrategy="1" name="MyFormulaWalker" qualified="false" references="true" similarDeclarations="false" stamp="1303295871230" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy 1 elements(s) to &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker.java&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Destination element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker.java&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker.java&apos;" description="Copy compilation unit" destination="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{MyFormulaWalker.java" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{MyFormulaWalker.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1303305002754" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos; to &apos;getConstants&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstants(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getFreeVariables&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalkerGetConstants.java[FormulaWalkerGetConstants~getFreeVariables~QFormula;" name="getConstants" references="true" stamp="1303305031948" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos; to &apos;getConstants&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstants(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="true" description="Rename method &apos;getFreeVariables&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalkerGetConstants.java[FormulaWalkerGetConstants~getFreeVariables~QTerm;" name="getConstants" references="true" stamp="1303305067878" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos; to &apos;getConstanst&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getFreeVariables(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstanst(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getFreeVariables&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalkerGetConstants.java[FormulaWalkerGetConstants~getFreeVariables~\[QTerm;" name="getConstanst" references="true" stamp="1303305079781" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstanst(...)&apos; to &apos;getConstants&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstanst(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants.getConstants(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getConstanst&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalkerGetConstants.java[FormulaWalkerGetConstants~getConstanst~\[QTerm;" name="getConstants" references="true" stamp="1303305085981" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants&apos; to &apos;ConstantsGetter&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaWalkerGetConstants&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.ConstantsGetter&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;FormulaWalkerGetConstants&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaWalkerGetConstants.java[FormulaWalkerGetConstants" matchStrategy="1" name="ConstantsGetter" qualified="false" references="true" similarDeclarations="false" stamp="1303305116132" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker&apos; to &apos;FreeVariableGetter&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.MyFormulaWalker&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FreeVariableGetter&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;MyFormulaWalker&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{MyFormulaWalker.java[MyFormulaWalker" matchStrategy="1" name="FreeVariableGetter" qualified="false" references="true" similarDeclarations="false" stamp="1303305136143" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;termVariables&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getCorrespondingVarMapping(...)&apos; to &apos;tvSet&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getCorrespondingVarMapping(ArrayList&lt;IElement&gt;, Collection&lt;TermVariable&gt;, int).termVariables&apos;&#x0A;- Renamed element: &apos;termVariables&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;termVariables&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getCorrespondingVarMapping~QArrayList\&lt;QIElement;&gt;;~QCollection\&lt;QTermVariable;&gt;;~I@termVariables!10671!10708!10696!10708!QCollection\&lt;QTermVariable;&gt;;" name="tvSet" references="true" stamp="1303307611413" version="1.0"/>&#x0A;<refactoring comment="Copy 1 elements(s) to &apos;local.stalin.plugins.output.lazyabstractiononcfg.FreeVariableGetter.java&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Destination element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FreeVariableGetter.java&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FreeVariableGetter.java&apos;" description="Copy compilation unit" destination="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FreeVariableGetter.java" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FreeVariableGetter.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1303309549653" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformFormula(...)&apos; to &apos;equalizeVariables&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformFormula(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.equalizeVariables(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;transformFormula&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{VariableEqualizer.java[VariableEqualizer~transformFormula~QFormula;" name="equalizeVariables" references="true" stamp="1303309645831" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformTerms(...)&apos; to &apos;equalizeVariables&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformTerms(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.equalizeVariables(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;transformTerms&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{VariableEqualizer.java[VariableEqualizer~transformTerms~\[QTerm;" name="equalizeVariables" references="true" stamp="1303309668866" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformTerm(...)&apos; to &apos;equalizeVariables&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.transformTerm(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.equalizeVariables(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;transformTerm&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{VariableEqualizer.java[VariableEqualizer~transformTerm~QTerm;" name="equalizeVariables" references="true" stamp="1303309678734" version="1.0"/>&#x0A;<refactoring comment="Copy 1 elements(s) to &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.java&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Destination element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.java&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.VariableEqualizer.java&apos;" description="Copy compilation unit" destination="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{VariableEqualizer.java" element1="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{VariableEqualizer.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1303315107007" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaDeepCloner&apos; to &apos;FormulaCloner&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaDeepCloner&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.FormulaCloner&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;FormulaDeepCloner&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{FormulaDeepCloner.java[FormulaDeepCloner" matchStrategy="1" name="FormulaCloner" qualified="false" references="true" similarDeclarations="false" stamp="1303315119955" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;edges&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(...)&apos; to &apos;nodes&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(ArrayList&lt;IElement&gt;).edges&apos;&#x0A;- Renamed element: &apos;edges&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;edges&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFormulas~QArrayList\&lt;QIElement;&gt;;@edges!13559!13626!13586!13590!QArrayList\&lt;QCFGExplicitNode;&gt;;" name="nodes" references="true" stamp="1303406048131" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;edge&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(...)&apos; to &apos;node&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(ArrayList&lt;IElement&gt;).edge&apos;&#x0A;- Renamed element: &apos;edge&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;edge&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFormulas~QArrayList\&lt;QIElement;&gt;;@edge!13916!13935!13932!13935!QCFGExplicitNode;" name="node" references="true" stamp="1303406094167" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;notInOutVars&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(...)&apos; to &apos;edge_notInOutVars&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.getFormulas(ArrayList&lt;IElement&gt;).notInOutVars&apos;&#x0A;- Renamed element: &apos;notInOutVars&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;notInOutVars&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver~getFormulas~QArrayList\&lt;QIElement;&gt;;@notInOutVars!13922!14030!13944!13955!QHashSet\&lt;QTermVariable;&gt;;" name="edge_notInOutVars" references="true" stamp="1303406316155" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;go&apos; in &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver&apos; to &apos;gw&apos;&#x0A;- Original project: &apos;LazyAbstractionOnCFG&apos;&#x0A;- Original element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.go&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.output.lazyabstractiononcfg.LazyAbstractionOnCFGObserver.gw&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;go&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;local.stalin.plugins.output.lazyabstractiononcfg{LazyAbstractionOnCFGObserver.java[LazyAbstractionOnCFGObserver^go" name="gw" references="true" setter="false" stamp="1303419787415" textual="false" version="1.0"/>
</session>