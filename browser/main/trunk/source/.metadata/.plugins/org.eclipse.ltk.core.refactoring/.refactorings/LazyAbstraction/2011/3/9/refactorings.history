<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename local variable &apos;oldAnnotation&apos; in &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.paper_REFINE(...)&apos; to &apos;annotation&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.paper_REFINE(UnwindingNode).oldAnnotation&apos;&#x0A;- Renamed element: &apos;oldAnnotation&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;oldAnnotation&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java[LazyAbstractionObserver~paper_REFINE~QUnwindingNode;@oldAnnotation!6897!7012!6916!6928!QSMTNodeAnnotations;" name="annotation" references="true" stamp="1298998844377" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;returnToUnwind&apos; in &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver&apos; to &apos;m_returnToUnwind&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.returnToUnwind&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.m_returnToUnwind&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;returnToUnwind&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java[LazyAbstractionObserver^returnToUnwind" name="m_returnToUnwind" references="true" setter="false" stamp="1299003508325" textual="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.transformAssertion(...)&apos; to &apos;transformFormula&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.transformAssertion(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.transformFormula(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;transformAssertion&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java[LazyAbstractionObserver~transformAssertion~QFormula;" name="transformFormula" references="true" stamp="1299247756634" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean abortCondition()&apos; from &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.paper_EXPAND()&apos; to &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Method name: &apos;abortCondition&apos;&#x0A;- Destination type: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;abortCondition&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java" name="abortCondition" replace="false" selection="6658 10" stamp="1299251092668" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;terms&apos; in &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.transformTerms(...)&apos; to &apos;term&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.transformTerms(Term).terms&apos;&#x0A;- Renamed element: &apos;terms&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;terms&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java[LazyAbstractionObserver~transformTerms~QTerm;@terms!17711!17720!17716!17720!QTerm;" name="term" references="true" stamp="1299259006909" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;node&apos; in &apos;local.stalin.plugins.generator.lazyabstraction.LAAnnotations&apos; to &apos;m_node&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LAAnnotations.node&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.generator.lazyabstraction.LAAnnotations.m_node&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;node&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LAAnnotations.java[LAAnnotations^node" name="m_node" references="true" setter="false" stamp="1299272829076" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void updateVariableToTerm(Entry&lt;String,TermVariable&gt; e)&apos; from &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.paper_EXPAND()&apos; to &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Method name: &apos;updateVariableToTerm&apos;&#x0A;- Destination type: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;updateVariableToTerm&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java" name="updateVariableToTerm" replace="true" selection="7798 413" stamp="1299333186653" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.updateVariableToTerm(...)&apos; to &apos;updateVariableToTermNewFunction&apos;&#x0A;- Original project: &apos;LazyAbstraction&apos;&#x0A;- Original element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.updateVariableToTerm(...)&apos;&#x0A;- Renamed element: &apos;local.stalin.plugins.generator.lazyabstraction.LazyAbstractionObserver.updateVariableToTermNewFunction(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;updateVariableToTerm&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;local.stalin.plugins.generator.lazyabstraction{LazyAbstractionObserver.java[LazyAbstractionObserver~updateVariableToTerm~QEntry\&lt;QString;QTermVariable;&gt;;" name="updateVariableToTermNewFunction" references="true" stamp="1299333208196" version="1.0"/>
</session>