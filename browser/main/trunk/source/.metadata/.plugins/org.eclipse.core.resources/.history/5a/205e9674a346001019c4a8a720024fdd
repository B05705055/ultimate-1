/**
 * 
 */
package local.stalin.plugins.generator.lazyabstraction;

import java.util.ArrayList;

import local.stalin.model.AbstractAnnotations;

/**
 * @author alexander
 *
 */
public class LAAnnotations extends AbstractAnnotations {

	private boolean		m_isCovered;
	private UnwindingNode m_coveringNode;
	private ArrayList<UnwindingNode> m_coveredNodes;
	
	/**
	 * 
	 */
	public LAAnnotations(boolean isCov, UnwindingNode covingNode, ArrayList<UnwindingNode> covedNodes) {
		m_isCovered = isCov;
		m_coveringNode = covingNode;
		m_coveredNodes = covedNodes;
	}

	/* (non-Javadoc)
	 * @see local.stalin.model.AbstractAnnotations#getFieldNames()
	 */
	@Override
	protected String[] getFieldNames() {
		String[] s = {"is covered", "covering node", "covered nodes"}; 
		return s;
	}

	/* (non-Javadoc)
	 * @see local.stalin.model.AbstractAnnotations#getFieldValue(java.lang.String)
	 */
	@Override
	protected Object getFieldValue(String field) {
		if(field.equals("is covered"))
			return m_isCovered;
		else if(field.equals("covering node"))
			return m_coveringNode;
		else if(field.equals("covered nodes"))
			return m_coveredNodes;
		
		return null;
	}

}
