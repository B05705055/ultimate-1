/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.uni_freiburg.informatik.ultimate.automata.parser.TestGrammar.node;

import de.uni_freiburg.informatik.ultimate.automata.parser.TestGrammar.analysis.*;

@SuppressWarnings("nls")
public final class AUnquotedIdentifier extends PIdentifier
{
    private TIdUnquoted _id_;

    public AUnquotedIdentifier()
    {
        // Constructor
    }

    public AUnquotedIdentifier(
        @SuppressWarnings("hiding") TIdUnquoted _id_)
    {
        // Constructor
        setId(_id_);

    }

    @Override
    public Object clone()
    {
        return new AUnquotedIdentifier(
            cloneNode(this._id_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnquotedIdentifier(this);
    }

    public TIdUnquoted getId()
    {
        return this._id_;
    }

    public void setId(TIdUnquoted node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TIdUnquoted) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
