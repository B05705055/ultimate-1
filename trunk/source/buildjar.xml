<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="create_run_jar" name="Create Runnable Jar for Project SMTInterpol">

  <property file="buildjar.properties"/>

  <property name="cobertura.dir" value="${dir.workspace}/cobertura" />
  <property name="instrumentation.dir" value="${cobertura.dir}/instrumentation" />

  <path id="cobertura.classpath">
    <fileset dir="${cobertura.dir}">
      <include name="cobertura.jar" />
      <include name="lib/**/*.jar" />
    </fileset>
  </path>

  <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

  <!-- Compile JavaCup -->
  <target name="javacup.compile">
    <mkdir dir="JavaCup/bin"/>
    <javac srcdir="${dir.javacup}/JavaCup/src" 
           destdir="${dir.javacup}/JavaCup/bin"
	   optimize="${optimize}"
	   includeAntRuntime="true"/>
  </target>

  <!-- Build smtlib1 parser and lexer -->
  <target name="check_smtlib1.cup_current">
    <uptodate property="smtlib1.cup.current">
      <srcfiles dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib" includes="*.cup,*.flex" />
      <mapper>
	<globmapper from="smtlib.cup" to="Parser.java"/>
	<globmapper from="smtlib.cup" to="LexerSymbols.java"/>
	<globmapper from="smtlib.flex" to="Lexer.java"/>
      </mapper>
    </uptodate>
  </target>
  <target name="smtlib1.cup" depends="check_smtlib1.cup_current,javacup.compile" 
                             unless="smtlib1.cup.current">
    <property name="workspacedir" value="${dir.workspace}"/>
    <ant antfile="build-parser.xml" dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib" />
  </target>

  <!-- Build smtlib2 parser and lexer -->
  <target name="check_smtlib2.cup_current">
    <uptodate property="smtlib2.cup.current">
      <srcfiles dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2" includes="*.cup,*.flex" />
      <mapper>
	<globmapper from="smtlib.cup" to="Parser.java"/>
	<globmapper from="smtlib.cup" to="LexerSymbols.java"/>
	<globmapper from="smtlib.flex" to="Lexer.java"/>
      </mapper>
    </uptodate>
  </target>
  <target name="smtlib2.cup" depends="check_smtlib2.cup_current,javacup.compile" 
                             unless="smtlib2.cup.current">
    <property name="workspacedir" value="${dir.workspace}"/>
    <ant antfile="build-parser.xml" dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2" />
  </target>

  <!-- Build dimacs parser and lexer -->
  <target name="check_dimacs.cup_current">
    <uptodate property="dimacs.cup.current">
      <srcfiles dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs" includes="*.cup,*.flex" />
      <mapper>
	<globmapper from="dimacs.cup" to="Parser.java"/>
	<globmapper from="dimacs.cup" to="LexerSymbols.java"/>
	<globmapper from="dimacs.flex" to="Lexer.java"/>
      </mapper>
    </uptodate>
  </target>
  <target name="dimacs.cup" depends="check_dimacs.cup_current,javacup.compile" 
                             unless="dimacs.cup.current">
    <property name="workspacedir" value="${dir.workspace}"/>
    <ant antfile="build-parser.xml" dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/dimacs" />
  </target>

  <!-- Compile SMTInterpol -->
  <target name="compile" depends="javacup.compile,smtlib1.cup,smtlib2.cup,dimacs.cup">
    <mkdir dir="${dir.corercp}/CoreRCP/bin"/>
    <mkdir dir="SmtInterpol/bin"/>
    <javac srcdir="${dir.corercp}/CoreRCP/src" destdir="${dir.corercp}/CoreRCP/bin" 
           optimize="${optimize}"
           includeAntRuntime="false"
           includes="de/uni_freiburg/informatik/ultimate/logic/**/*.java,de/uni_freiburg/informatik/ultimate/util/**/*.java"
           excludes="**/MonitoredProcess.java,**/UnionFind.java,**/ContextSimplifier.java,**/NegationNormalForm.java">
<!--      <classpath>
        <pathelement location="${dir.log4j}" />
      </classpath>-->
    </javac>
    <echo message="Build core finished" />
    <javac srcdir="${dir.smtinterpol}/SmtInterpol/src"
      destdir="${dir.smtinterpol}/SmtInterpol/bin" optimize="${optimize}" includeAntRuntime="false">
      <exclude name="de/uni_freiburg/informatik/ultimate/smtinterpol/test_generator/**" />
      <exclude name="de/uni_freiburg/informatik/ultimate/smtinterpol/smtcomp/**" />
      <classpath>
        <pathelement location="${dir.log4j}"/>
        <pathelement path="${dir.javacup}/JavaCup/bin"/>
        <pathelement path="${dir.corercp}/CoreRCP/bin"/>
      </classpath>
    </javac>
  </target>

  <!-- Create an executable jar -->
  <target name="create_run_jar" depends="clean,compile">
    <jar destfile="${jar.outdir}/${jar.basename}.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Main-Class" value="de.uni_freiburg.informatik.ultimate.smtinterpol.Main"/>
      </manifest>
      <fileset dir="${dir.smtinterpol}/SmtInterpol/bin">
	<exclude name="**/*.svn" />
	<exclude name="**/test_generator/**" />
	<exclude name="**/smtcomp/**" />
      </fileset>
      <fileset dir="${dir.javacup}/JavaCup/bin">
	<include name="java_cup/runtime/**"/>
      </fileset>
      <fileset dir="${dir.log4j}">
	<include name="org/**"/>
      </fileset>
      <fileset dir="${dir.corercp}/CoreRCP/bin">
	<include name="de/uni_freiburg/informatik/ultimate/logic/**/*.class"/>
	<include name="de/uni_freiburg/informatik/ultimate/util/**/*.class"/>
      </fileset>
      <zipfileset file="SmtInterpol/export/COPYING" prefix="" />
      <zipfileset file="SmtInterpol/export/COPYING.LESSER" prefix="" />
      <zipfileset file="SmtInterpol/export/AUTHORS" prefix="" />
      <zipfileset file="SmtInterpol/export/README" prefix="" />
    </jar>
  </target>

  <!-- Create a source zip -->
  <target name="create_src_zip">
    <zip destfile="${jar.outdir}/${jar.basename}-src.zip">
      <zipfileset dir="${dir.smtinterpol}/SmtInterpol" prefix="SMTInterpol/">
	<include name="src/**" />
	<exclude name="**/*.svn" />
	<exclude name="**/test_generator/**" />
	<exclude name="**/smtcomp/**" />
      </zipfileset>
      <zipfileset dir="${dir.smtinterpol}/SmtInterpol/export" 
		  includes="build-parser.xml,.classpath,.project,.externalToolBuilders/**,build.xml"
		  excludes="**/*.svn" prefix="SMTInterpol/"/>
      <zipfileset file="${dir.smtinterpol}/SmtInterpol/export/MANIFEST.MF"
		  prefix="SMTInterpol/META-INF/"/>
      <zipfileset dir="${dir.javacup}/JavaCup" 
		  includes="java-cup-12joho.jar,JFlex.jar"
		  excludes="**/*.svn" prefix="SMTInterpol/"/>
      <zipfileset file="${dir.log4j}" prefix="SMTInterpol/">
        <include name="org/**" />
      </zipfileset>
      <zipfileset dir="${dir.corercp}/CoreRCP" prefix="SMTInterpol/">
	<include name="src/de/uni_freiburg/informatik/ultimate/logic/**/*.java"/>
	<include name="src/de/uni_freiburg/informatik/ultimate/util/**/*.java"/>
      </zipfileset>
      <zipfileset dir="${dir.smtinterpol}/SmtInterpolSamples" prefix="SMTInterpol/">
	<include name="src/de/uni_freiburg/informatik/ultimate/smtinterpol/samples/*.java" />
	<exclude name="src/de/uni_freiburg/informatik/ultimate/smtinterpol/samples/AssignmentSample.java" />
	<exclude name="src/de/uni_freiburg/informatik/ultimate/smtinterpol/samples/FlipDecisions.java" />
      </zipfileset>
      <zipfileset file="SmtInterpol/export/COPYING" prefix="SMTInterpol/" />
      <zipfileset file="SmtInterpol/export/COPYING.LESSER" prefix="SMTInterpol/" />
      <zipfileset file="SmtInterpol/export/AUTHORS" prefix="SMTInterpol/" />
      <zipfileset file="SmtInterpol/export/README" prefix="SMTInterpol/" />
    </zip>
  </target>

  <!-- Set the competition flag in Config.java -->
  <target name="patch_competition">
    <patch patchfile="SmtInterpol/export/competition.patch" reverse="yes" strip="0" />
  </target>

  <!-- Create an executable jar in competition mode -->
  <target name="create_competition_jar" depends="clean,patch_competition,compile">
    <jar destfile="${jar.outdir}/${jar.basename}-comp.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Main-Class" value="de.uni_freiburg.informatik.ultimate.smtinterpol.Main"/>
      </manifest>
      <fileset dir="${dir.smtinterpol}/SmtInterpol/bin">
	<exclude name="**/*.svn" />
	<exclude name="**/test_generator/**" />
	<exclude name="**/smtcomp/**" />
      </fileset>
      <fileset dir="${dir.javacup}/JavaCup/bin">
	<include name="java_cup/runtime/**"/>
      </fileset>
      <fileset dir="${file.log4jjar}">
        <include name="org/**" />
      </fileset>
      <fileset dir="${dir.corercp}/CoreRCP/bin">
	<include name="de/uni_freiburg/informatik/ultimate/logic/**/*.class"/>
	<include name="de/uni_freiburg/informatik/ultimate/util/**/*.class"/>
      </fileset>
      <zipfileset file="SmtInterpol/export/COPYING" prefix="" />
      <zipfileset file="SmtInterpol/export/COPYING.LESSER" prefix="" />
      <zipfileset file="SmtInterpol/export/AUTHORS" prefix="" />
      <zipfileset file="SmtInterpol/export/README" prefix="" />
    </jar>
    <patch patchfile="SmtInterpol/export/competition.patch" strip="0" />
  </target>

  <!-- Create a jar for the SMT-COMP including the binary and the sources of the solver -->
  <target name="create_competition_version" depends="create_run_jar,create_src_zip">
    <tar destfile="smtinterpol-smtcomp.tar">
      <tarfileset dir="." filemode="755" prefix="smtinterpol">
	<include name="SmtInterpol/export/run"/>
      </tarfileset>
      <tarfileset dir="." filemode="644" prefix="smtinterpol">
	<include name="smtinterpol.jar" />
	<include name="smtinterpol-src.zip" />
      </tarfileset>
    </tar>
    <gzip destfile="smtinterpol-smtcomp.tar.gz" src="smtinterpol-smtcomp.tar" />
    <delete file="smtinterpol-smtcomp.tar" />
  </target>

  <!-- Create a new distribution -->
  <target name="distribution">
<!-- This is ugly, but I don't know how to do it differently... -->
<ant antfile="buildjar.xml" target="create_run_jar" />
<ant antfile="buildjar.xml" target="create_competition_jar" />
<ant antfile="buildjar.xml" target="create_src_zip" />
    <exec executable="make" dir="SmtInterpol/web/html">
      <arg line="distribution" />
    </exec>
  </target>

  <!-- Delete compiled class files -->
  <target name="clean" description="Deletes a previous build">
    <echo message="Deleting bin trees"/>
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${dir.javacup}/JavaCup/bin"/>
      <fileset dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib" includes="Parser.java,Lexer.java,LexerSymbols.java" />
      <fileset dir="${dir.smtinterpol}/SmtInterpol/src/de/uni_freiburg/informatik/ultimate/smtinterpol/smtlib2" includes="Parser.java,Lexer.java,LexerSymbols.java" />
      <fileset dir="${dir.smtinterpol}/SmtInterpol/bin"/>
      <fileset dir="${dir.corercp}/CoreRCP/bin"/>
    </delete>
  </target>

  <!-- Delete the executable jar and the source zip -->
  <target name="distclean" description="Deletes a previously build jar" depends="clean">
    <delete file="${jar.outdir}/${jar.basename}.jar" failonerror="false"/>
    <delete file="${jar.outdir}/${jar.basename}-src.zip" failonerror="false"/>
  </target>

  <!-- Clean before creating an executable jar -->
  <target name="cleanbuild" description="Clean and rebuild jar" depends="clean,create_run_jar"/>

  <!-- Cobertura instrumentation task -->
  <target name="coberturainstrument" description="Let cobertura instrument the source code">
    <delete file="${dir.workspace}/cobertura.ser" />
    <cobertura-instrument todir="${instrumentation.dir}">
      <fileset dir="${dir.corercp}/CoreRCP/bin/de/uni_freiburg/informatik/ultimate/logic">
	<include name="**/*.class" />
      </fileset>
      <fileset dir="${dir.smtinterpol}/SmtInterpol/bin">
	<include name="**/*.class" />
      </fileset>
      <auxClasspath>
        <path>
          <pathelement location="${dir.log4j}"/>
          <pathelement location="${dir.smtinterpol}/JavaCup/bin" />
  	  <pathelement location="${dir.smtinterpol}/CoreRCP/bin" />
	  <pathelement location="${dir.smtinterpol}/SmtInterpol/bin" />
        </path>
      </auxClasspath>
    </cobertura-instrument>
  </target>

  <!-- Run tests without coverage analysis -->
  <target name="runtests" description="Run junit tests">
    <delete dir="${dir.workspace}/testreports" quiet="true" />
    <mkdir dir="${dir.workspace}/testreports" />
    <junit fork="yes" forkmode="once" dir="${dir.workspace}/testreports" failureProperty="test.failed">
      <assertions>
	<enable />
      </assertions>

      <classpath>
	<pathelement location="${dir.log4j}"/>
	<pathelement location="${dir.smtinterpol}/JavaCup/bin" />
	<pathelement location="${dir.smtinterpol}/CoreRCP/bin" />
	<pathelement location="${dir.smtinterpol}/SmtInterpol/bin" />
	<pathelement location="${dir.tests}/SmtInterpolTest/bin" />
      </classpath>

      <formatter type="xml" />

      <batchtest todir="${dir.workspace}/testreports" unless="testcase">
	<fileset dir="${dir.tests}/SmtInterpolTest/src">
	  <include name="**/*.java" />
	  <exclude name="**/TestCaseWithLogger.java" /> <!-- This is just an utility class -->
	  <exclude name="**/CompilerTest.java" /> <!-- This is more a main class -->
	</fileset>
      </batchtest>
    </junit>

  </target>

  <!-- Run junit tests under cobertura -->
  <target name="runtests-cobertura" description="Run junit tests using cobertura coverage analyzer" depends="coberturainstrument">
    <delete dir="${dir.workspace}/testreports" quiet="true" />
    <mkdir dir="${dir.workspace}/testreports" />
    <junit fork="yes" forkmode="once" dir="${dir.workspace}/testreports" failureProperty="test.failed">
      <assertions>
	<enable />
      </assertions>
      <!--
	  Specify the name of the coverage data file to use.
	  The value specified below is the default.
      -->
      <sysproperty key="net.sourceforge.cobertura.datafile"
		   file="${dir.workspace}/cobertura.ser" />

      <!--
	  Note the classpath order: instrumented classes are before the
	  original (uninstrumented) classes.  This is important.
      -->
      <!--      <classpath location="${instrumentation.dir}" /> -->
      <classpath>
	<pathelement location="${instrumentation.dir}" />
	<pathelement location="${dir.log4j}"/>
	<pathelement location="${dir.smtinterpol}/JavaCup/bin" />
	<pathelement location="${dir.smtinterpol}/CoreRCP/bin" />
	<pathelement location="${dir.smtinterpol}/SmtInterpol/bin" />
	<pathelement location="${dir.tests}/SmtInterpolTest/bin" />
      </classpath>
      <!--
	  The instrumented classes reference classes used by the
	  Cobertura runtime, so Cobertura and its dependencies
	  must be on your classpath.
      -->
      <classpath refid="cobertura.classpath" />

      <formatter type="xml" />

      <batchtest todir="${dir.workspace}/testreports" unless="testcase">
	<fileset dir="${dir.tests}/SmtInterpolTest/src">
	  <include name="**/*.java" />
	  <exclude name="**/TestCaseWithLogger.java" /> <!-- This is just an utility class -->
	  <exclude name="**/CompilerTest.java" /> <!-- This is more a main class -->
	</fileset>
      </batchtest>
    </junit>

    <delete dir="${dir.workspace}/cobertura/results" quiet="true" />

    <cobertura-report format="html" destdir="${dir.workspace}/cobertura/results" >
      <fileset dir="${dir.smtinterpol}/SmtInterpol/src">
        <include name="**/*.java" />
      </fileset>
      <fileset dir="${dir.corercp}/CoreRCP/src">
        <include name="de/uni_freiburg/informatik/ultimate/logic/**/*.java" />
        <include name="de/uni_freiburg/informatik/ultimate/util/**/*.java" />
    </fileset>
    </cobertura-report>

    <echo message="See coverage results in ${dir.workspace}/cobertura/results/index.html" />
  </target>

</project>
