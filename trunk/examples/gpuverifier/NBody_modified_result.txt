[2017-09-08 22:16:49,304 INFO  L168              Benchmark]: Toolchain (without parser) took 4302.87 ms. Allocated memory was 331.9 MB in the beginning and 364.4 MB in the end (delta: 32.5 MB). Free memory was 148.5 MB in the beginning and 87.6 MB in the end (delta: 60.9 MB). Peak memory consumption was 93.4 MB. Max. memory is 7.6 GB.
[2017-09-08 22:16:49,305 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.04 ms. Allocated memory is still 331.9 MB. Free memory is still 152.0 MB. There was no memory consumed. Max. memory is 7.6 GB.
[2017-09-08 22:16:49,305 INFO  L168              Benchmark]: Boogie Preprocessor took 4.56 ms. Allocated memory is still 331.9 MB. Free memory was 148.3 MB in the beginning and 146.6 MB in the end (delta: 1.7 MB). Peak memory consumption was 1.7 MB. Max. memory is 7.6 GB.
[2017-09-08 22:16:49,305 INFO  L168              Benchmark]: RCFGBuilder took 202.73 ms. Allocated memory is still 331.9 MB. Free memory was 146.6 MB in the beginning and 103.9 MB in the end (delta: 42.7 MB). Peak memory consumption was 42.7 MB. Max. memory is 7.6 GB.
[2017-09-08 22:16:49,305 INFO  L168              Benchmark]: TraceAbstraction took 4093.17 ms. Allocated memory was 331.9 MB in the beginning and 364.4 MB in the end (delta: 32.5 MB). Free memory was 103.6 MB in the beginning and 87.6 MB in the end (delta: 16.0 MB). Peak memory consumption was 48.5 MB. Max. memory is 7.6 GB.
[2017-09-08 22:16:49,305 INFO  L344   ainManager$Toolchain]: #######################  End [Toolchain 3] #######################
[2017-09-08 22:16:49,305 INFO  L137             ResultUtil]:  --- Results ---
[2017-09-08 22:16:49,305 INFO  L139             ResultUtil]:  * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 659]: procedure precondition can be violated
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=268435456bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=268435456bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=268435456bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
[L659-L660]         requires !(_P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=268435456bv32, v3$2=0bv32, v7=false]

[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - PositiveResult [Line: 436]: procedure precondition always holds
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - PositiveResult [Line: 226]: assertion always holds
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,305 INFO  L164             ResultUtil]:   - PositiveResult [Line: 341]: assertion always holds
[2017-09-08 22:16:49,305 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - PositiveResult [Line: 443]: procedure precondition always holds
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 827]: procedure precondition can be violated
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L296]              assume v7;
[L297]              havoc v8$1, v8$2;
[L298]              havoc v9$1, v9$2;
[L299]              havoc v10$1, v10$2;
[L300]              havoc v11$1, v11$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L301]       CALL   call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L301]       RET    call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=1bv32]
[L302]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L302]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=1bv32]
[L303]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=1bv32]
[L304]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_MUL(v0$2, 4bv32), v8$2);
[L827-L828]         requires !(_P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=1bv32, v8$2=0bv32]

[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 827]: procedure precondition can be violated
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L296]              assume v7;
[L297]              havoc v8$1, v8$2;
[L298]              havoc v9$1, v9$2;
[L299]              havoc v10$1, v10$2;
[L300]              havoc v11$1, v11$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L301]       CALL   call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=2bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=2bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L301]       RET    call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L302]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L302]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L303]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L304]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_MUL(v0$2, 4bv32), v8$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L305]              assume true;
[L306]              $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)] := v8$1;
[L307]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_MUL(v0$2, 4bv32)] := v8$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L308]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L308]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=1bv32]
[L309]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L309]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=1bv32]
[L310]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=1bv32]
[L311]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32), v9$2);
[L827-L828]         requires !(_P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=1bv32, v9$2=0bv32]

[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 659]: procedure precondition can be violated
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2147483648bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2147483648bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=67108864bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1073741824bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=67108864bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1073741824bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L255]              assume true;
[L256]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1));
[L257]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L258]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L258]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=1bv32, v7=false]
[L259]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L259]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=1bv32, v7=false]
[L260]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=1bv32, v7=false]
[L261]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), v6$2);
[L659-L660]         requires !(_P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=0bv32, v1$2=16bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=1bv32, v6$2=0bv32, v7=false]

[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,306 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,306 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,307 INFO  L164             ResultUtil]:   - PositiveResult [Line: 224]: assertion always holds
[2017-09-08 22:16:49,307 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,307 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 743]: procedure precondition can be violated
[2017-09-08 22:16:49,307 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1073741824bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1073741824bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L255]              assume true;
[L256]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1));
[L257]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L258]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L258]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L259]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L259]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L260]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L261]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), v6$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L262]              assume true;
[L263]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)] := v6$1;
[L264]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32)] := v6$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L265]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L265]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L266]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L266]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L267]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L268]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L269]              assume true;
[L270]              $$newVelocity[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1);
[L271]              $$newVelocity[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L272]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L272]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L273]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L273]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L274]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L275]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32($acc.0$2[64:32], $deltaTime), v27$2));
[L743-L744]         requires !(_P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=1bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]

[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 340]: assertion always holds
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 743]: procedure precondition can be violated
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=4bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=4bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=4bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=4bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L255]              assume true;
[L256]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1));
[L257]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L258]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L258]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L259]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L259]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L260]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L261]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), v6$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L262]              assume true;
[L263]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)] := v6$1;
[L264]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32)] := v6$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L265]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L265]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L266]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L266]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L267]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L268]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2));
[L743-L744]         requires !(_P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=128bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v26$1=1bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]

[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 343]: assertion always holds
[2017-09-08 22:16:49,366 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,366 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 743]: procedure precondition can be violated
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=536870912bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=536870912bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=65536bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=65536bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L255]              assume true;
[L256]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1));
[L257]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L258]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=0bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L258]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L259]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L259]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L260]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L261]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), v6$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L262]              assume true;
[L263]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)] := v6$1;
[L264]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32)] := v6$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L265]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=536870912bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=536870912bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L265]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L266]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L266]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L267]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L268]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L269]              assume true;
[L270]              $$newVelocity[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1);
[L271]              $$newVelocity[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L272]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L272]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L273]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L273]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L274]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L275]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32($acc.0$2[64:32], $deltaTime), v27$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L276]              assume true;
[L277]              $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1);
[L278]              $$newVelocity[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32($acc.0$2[64:32], $deltaTime), v27$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L279]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32($acc.0$1[96:64], $deltaTime), v28$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L279]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32($acc.0$1[96:64], $deltaTime), v28$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L280]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L280]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L281]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L282]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32($acc.0$2[96:64], $deltaTime), v28$2));
[L743-L744]         requires !(_P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=1bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=1bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]

[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 342]: assertion always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,367 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,367 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,368 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,368 INFO  L164             ResultUtil]:   - PositiveResult [Line: 225]: assertion always holds
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,368 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,368 INFO  L164             ResultUtil]:   - PositiveResult [Line: 227]: assertion always holds
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     For all program executions holds that assertion always holds at this location
[2017-09-08 22:16:49,368 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 743]: procedure precondition can be violated
[2017-09-08 22:16:49,368 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=16384bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=16384bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=4096bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=2147483648bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=2147483648bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L255]              assume true;
[L256]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1));
[L257]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v7=false]
[L258]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=65536bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=65536bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L258]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), v6$1, $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L259]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L259]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L260]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v7=false]
[L261]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), v6$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L262]              assume true;
[L263]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)] := v6$1;
[L264]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32)] := v6$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L265]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=16384bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=16384bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L265]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1), $$newVelocity[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L266]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L266]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L267]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L268]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L269]              assume true;
[L270]              $$newVelocity[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32($acc.0$1[32:0], $deltaTime), v26$1);
[L271]              $$newVelocity[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32($acc.0$2[32:0], $deltaTime), v26$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L272]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=32768bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=32768bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L272]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L273]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L273]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L274]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L275]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32($acc.0$2[64:32], $deltaTime), v27$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L276]              assume true;
[L277]              $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32($acc.0$1[64:32], $deltaTime), v27$1);
[L278]              $$newVelocity[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32($acc.0$2[64:32], $deltaTime), v27$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L279]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32($acc.0$1[96:64], $deltaTime), v28$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=16384bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L279]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32($acc.0$1[96:64], $deltaTime), v28$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L280]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L280]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L281]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L282]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32($acc.0$2[96:64], $deltaTime), v28$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L283]              assume true;
[L284]              $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)] := FADD32(FMUL32($acc.0$1[96:64], $deltaTime), v28$1);
[L285]              $$newVelocity[BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32)] := FADD32(FMUL32($acc.0$2[96:64], $deltaTime), v28$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L286]       CALL   call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), FADD32(FMUL32($acc.0$1[128:96], $deltaTime), v29$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L736]              _WRITE_HAS_OCCURRED_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then true else _WRITE_HAS_OCCURRED_$$newVelocity);
[L737]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_HAS_OCCURRED_$$newVelocity)=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L286]       RET    call _LOG_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32), FADD32(FMUL32($acc.0$1[128:96], $deltaTime), v29$1), $$newVelocity[BV32_ADD(BV32_MUL(v1$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v29$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L287]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L780]              _WRITE_READ_BENIGN_FLAG_$$newVelocity := (if _P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newVelocity);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, old(_WRITE_READ_BENIGN_FLAG_$$newVelocity)=false]
[L287]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v29$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L288]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v29$1=1bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]
[L289]       FCALL  call _CHECK_WRITE_$$newVelocity(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 3bv32), FADD32(FMUL32($acc.0$2[128:96], $deltaTime), v29$2));
[L743-L744]         requires !(_P && _WRITE_HAS_OCCURRED_$$newVelocity && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newVelocity != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=true, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, _WRITE_READ_BENIGN_FLAG_$$newVelocity=false, v0$1=0bv32, v0$2=2bv32, v1$1=0bv32, v1$2=2147483648bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v29$1=1bv32, v29$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=0bv32, v5$2=0bv32, v6$1=0bv32, v6$2=0bv32, v7=false]

[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 827]: procedure precondition can be violated
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L296]              assume v7;
[L297]              havoc v8$1, v8$2;
[L298]              havoc v9$1, v9$2;
[L299]              havoc v10$1, v10$2;
[L300]              havoc v11$1, v11$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L301]       CALL   call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1048576bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=536870912bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1048576bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=536870912bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L301]       RET    call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L302]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L302]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L303]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L304]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_MUL(v0$2, 4bv32), v8$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L305]              assume true;
[L306]              $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)] := v8$1;
[L307]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_MUL(v0$2, 4bv32)] := v8$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L308]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=131072bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L308]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L309]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L309]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L310]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L311]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32), v9$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L312]              assume true;
[L313]              $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)] := v9$1;
[L314]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32)] := v9$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L315]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32), v10$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L315]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32), v10$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L316]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L316]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L317]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L318]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32), v10$2);
[L827-L828]         requires !(_P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=1bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=1bv32, v10$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]

[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 659]: procedure precondition can be violated
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=262144bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=262144bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=67108864bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8192bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=67108864bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8192bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L248]              assume true;
[L249]              $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1));
[L250]              $$newPosition[BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v7=false]
[L251]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L251]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$1, $deltaTime), v5$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=2147483648bv32, v7=false]
[L252]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L252]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=2147483648bv32, v7=false]
[L253]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=2147483648bv32, v7=false]
[L254]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 2bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[96:64], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v28$2, $deltaTime), v5$2)));
[L659-L660]         requires !(_P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=0bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v28$1=0bv32, v28$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=0bv32, v4$2=0bv32, v5$1=2147483648bv32, v5$2=0bv32, v7=false]

[2017-09-08 22:16:49,449 INFO  L164             ResultUtil]:   - PositiveResult [Line: 827]: procedure precondition always holds
[2017-09-08 22:16:49,449 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,450 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,450 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,450 INFO  L164             ResultUtil]:   - PositiveResult [Line: 743]: procedure precondition always holds
[2017-09-08 22:16:49,450 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,450 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 659]: procedure precondition can be violated
[2017-09-08 22:16:49,450 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L232]              assume !v7;
[L233]              havoc v26$1, v26$2;
[L234]              havoc v27$1, v27$2;
[L235]              havoc v28$1, v28$2;
[L236]              havoc v29$1, v29$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v7=false]
[L237]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=8388608bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=8388608bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L237]       RET    call _LOG_WRITE_$$newPosition(true, BV32_MUL(v1$1, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1)), $$newPosition[BV32_MUL(v1$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L238]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L238]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_MUL(v1$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L239]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v3$1=0bv32, v7=false]
[L240]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_MUL(v1$2, 4bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2)));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L241]              assume true;
[L242]              $$newPosition[BV32_MUL(v1$1, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$1, $deltaTime), v3$1));
[L243]              $$newPosition[BV32_MUL(v1$2, 4bv32)] := FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[32:0], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v26$2, $deltaTime), v3$2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v3$1=0bv32, v3$2=0bv32, v7=false]
[L244]       CALL   call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L652]              _WRITE_HAS_OCCURRED_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then true else _WRITE_HAS_OCCURRED_$$newPosition);
[L653]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_HAS_OCCURRED_$$newPosition)=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L244]       RET    call _LOG_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$1[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$1, $deltaTime), v4$1)), $$newPosition[BV32_ADD(BV32_MUL(v1$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=2147483648bv32, v7=false]
[L245]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L696]              _WRITE_READ_BENIGN_FLAG_$$newPosition := (if _P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$newPosition);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, old(_WRITE_READ_BENIGN_FLAG_$$newPosition)=false]
[L245]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=2147483648bv32, v7=false]
[L246]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=2147483648bv32, v7=false]
[L247]       FCALL  call _CHECK_WRITE_$$newPosition(true, BV32_ADD(BV32_MUL(v1$2, 4bv32), 1bv32), FADD32(FMUL32(FMUL32(FMUL32($acc.0$2[64:32], 1056964608bv32), $deltaTime), $deltaTime), FADD32(FMUL32(v27$2, $deltaTime), v4$2)));
[L659-L660]         requires !(_P && _WRITE_HAS_OCCURRED_$$newPosition && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$newPosition != _value);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $deltaTime=0bv32, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=true, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$newPosition=false, v0$1=1bv32, v0$2=0bv32, v1$1=1bv32, v1$2=0bv32, v2=256bv32, v26$1=0bv32, v26$2=0bv32, v27$1=0bv32, v27$2=0bv32, v3$1=0bv32, v3$2=0bv32, v4$1=2147483648bv32, v4$2=0bv32, v7=false]

[2017-09-08 22:16:49,603 INFO  L164             ResultUtil]:   - CounterExampleResult [Line: 827]: procedure precondition can be violated
[2017-09-08 22:16:49,603 INFO  L168             ResultUtil]:     procedure precondition can be violated
We found a FailurePath: 
[L99-L100]          requires !_READ_HAS_OCCURRED_$$pos && !_WRITE_HAS_OCCURRED_$$pos && !_ATOMIC_HAS_OCCURRED_$$pos;
[L99-L101]          requires !_READ_HAS_OCCURRED_$$vel && !_WRITE_HAS_OCCURRED_$$vel && !_ATOMIC_HAS_OCCURRED_$$vel;
[L99-L102]          requires !_READ_HAS_OCCURRED_$$newPosition && !_WRITE_HAS_OCCURRED_$$newPosition && !_ATOMIC_HAS_OCCURRED_$$newPosition;
[L99-L103]          requires !_READ_HAS_OCCURRED_$$newVelocity && !_WRITE_HAS_OCCURRED_$$newVelocity && !_ATOMIC_HAS_OCCURRED_$$newVelocity;
[L99-L104]          requires !_READ_HAS_OCCURRED_$$localPos && !_WRITE_HAS_OCCURRED_$$localPos && !_ATOMIC_HAS_OCCURRED_$$localPos;
[L99-L105]          requires BV32_SGT(group_size_x, 0bv32);
[L99-L106]          requires BV32_SGT(num_groups_x, 0bv32);
[L99-L107]          requires BV32_SGE(group_id_x$1, 0bv32);
[L99-L108]          requires BV32_SGE(group_id_x$2, 0bv32);
[L99-L109]          requires BV32_SLT(group_id_x$1, num_groups_x);
[L99-L110]          requires BV32_SLT(group_id_x$2, num_groups_x);
[L99-L111]          requires BV32_SGE(local_id_x$1, 0bv32);
[L99-L112]          requires BV32_SGE(local_id_x$2, 0bv32);
[L99-L113]          requires BV32_SLT(local_id_x$1, group_size_x);
[L99-L114]          requires BV32_SLT(local_id_x$2, group_size_x);
[L99-L115]          requires BV32_SGT(group_size_y, 0bv32);
[L99-L116]          requires BV32_SGT(num_groups_y, 0bv32);
[L99-L117]          requires BV32_SGE(group_id_y$1, 0bv32);
[L99-L118]          requires BV32_SGE(group_id_y$2, 0bv32);
[L99-L119]          requires BV32_SLT(group_id_y$1, num_groups_y);
[L99-L120]          requires BV32_SLT(group_id_y$2, num_groups_y);
[L99-L121]          requires BV32_SGE(local_id_y$1, 0bv32);
[L99-L122]          requires BV32_SGE(local_id_y$2, 0bv32);
[L99-L123]          requires BV32_SLT(local_id_y$1, group_size_y);
[L99-L124]          requires BV32_SLT(local_id_y$2, group_size_y);
[L99-L125]          requires BV32_SGT(group_size_z, 0bv32);
[L99-L126]          requires BV32_SGT(num_groups_z, 0bv32);
[L99-L127]          requires BV32_SGE(group_id_z$1, 0bv32);
[L99-L128]          requires BV32_SGE(group_id_z$2, 0bv32);
[L99-L129]          requires BV32_SLT(group_id_z$1, num_groups_z);
[L99-L130]          requires BV32_SLT(group_id_z$2, num_groups_z);
[L99-L131]          requires BV32_SGE(local_id_z$1, 0bv32);
[L99-L132]          requires BV32_SGE(local_id_z$2, 0bv32);
[L99-L133]          requires BV32_SLT(local_id_z$1, group_size_z);
[L99-L134]          requires BV32_SLT(local_id_z$2, group_size_z);
[L99-L135]          requires group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 ==> local_id_x$1 != local_id_x$2 || local_id_y$1 != local_id_y$2 || local_id_z$1 != local_id_z$2;
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false]
[L208]              v0$1 := local_id_x$1;
[L209]              v0$2 := local_id_x$2;
[L210]              v1$1 := BV32_ADD(BV32_MUL(group_id_x$1, group_size_x), local_id_x$1);
[L211]              v1$2 := BV32_ADD(BV32_MUL(group_id_x$2, group_size_x), local_id_x$2);
[L212]              v2 := group_size_x;
[L213]              havoc v3$1, v3$2;
[L214]              havoc v4$1, v4$2;
[L215]              havoc v5$1, v5$2;
[L216]              havoc v6$1, v6$2;
[L217]              $acc.0$1, $i.0 := 0bv128, 0bv32;
[L218]              $acc.0$2 := 0bv128;
[L219]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L223]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L224]              assert _ATOMIC_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L225]              assert _WRITE_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L226]              assert _READ_HAS_OCCURRED_$$localPos ==> group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32]
[L227]              assert true;
[L228]              v7 := BV32_ULT($i.0, BV32_UDIV($numBodies, v2));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L296]              assume v7;
[L297]              havoc v8$1, v8$2;
[L298]              havoc v9$1, v9$2;
[L299]              havoc v10$1, v10$2;
[L300]              havoc v11$1, v11$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true]
[L301]       CALL   call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _value=0bv32, _value_old=2147483648bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2048bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=2147483648bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L301]       RET    call _LOG_WRITE_$$localPos(true, BV32_MUL(v0$1, 4bv32), v8$1, $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L302]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L302]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_MUL(v0$2, 4bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L303]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32]
[L304]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_MUL(v0$2, 4bv32), v8$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L305]              assume true;
[L306]              $$localPos[1bv1][BV32_MUL(v0$1, 4bv32)] := v8$1;
[L307]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_MUL(v0$2, 4bv32)] := v8$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32]
[L308]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=32768bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=32768bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=8bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L308]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32), v9$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L309]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=2bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L309]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L310]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32]
[L311]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32), v9$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L312]              assume true;
[L313]              $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 1bv32)] := v9$1;
[L314]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(BV32_MUL(v0$2, 4bv32), 1bv32)] := v9$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L315]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32), v10$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=0bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L315]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32), v10$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L316]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=1bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L316]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L317]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L318]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32), v10$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L319]              assume true;
[L320]              $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 2bv32)] := v10$1;
[L321]              $$localPos[(if group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 then 1bv1 else 0bv1)][BV32_ADD(BV32_MUL(v0$2, 4bv32), 2bv32)] := v10$2;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L322]       CALL   call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 3bv32), v11$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 3bv32)]);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=false, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L820]              _WRITE_HAS_OCCURRED_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then true else _WRITE_HAS_OCCURRED_$$localPos);
[L821]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2 && _TRACKING && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos == _value then _value != _value_old else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _value=1bv32, _value_old=1bv32, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_HAS_OCCURRED_$$localPos)=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L322]       RET    call _LOG_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$1, 4bv32), 3bv32), v11$1, $$localPos[1bv1][BV32_ADD(BV32_MUL(v0$1, 4bv32), 3bv32)]);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v11$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L323]       CALL   call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 3bv32));
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L864]              _WRITE_READ_BENIGN_FLAG_$$localPos := (if _P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset then false else _WRITE_READ_BENIGN_FLAG_$$localPos);
             VAL    [_ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _offset=0bv32, _P=true, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, old(_WRITE_READ_BENIGN_FLAG_$$localPos)=false]
[L323]       RET    call _UPDATE_WRITE_READ_BENIGN_FLAG_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 3bv32));
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v11$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L324]              assume true;
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v11$1=1bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]
[L325]       FCALL  call _CHECK_WRITE_$$localPos(true, BV32_ADD(BV32_MUL(v0$2, 4bv32), 3bv32), v11$2);
[L827-L828]         requires !(_P && _WRITE_HAS_OCCURRED_$$localPos && _WATCHED_OFFSET == _offset && _WATCHED_VALUE_$$localPos != _value && group_id_x$1 == group_id_x$2 && group_id_y$1 == group_id_y$2 && group_id_z$1 == group_id_z$2);
             VAL    [$acc.0$1=0bv128, $acc.0$2=0bv128, $i.0=0bv32, $numBodies=0bv32, _ATOMIC_HAS_OCCURRED_$$localPos=false, _ATOMIC_HAS_OCCURRED_$$newPosition=false, _ATOMIC_HAS_OCCURRED_$$newVelocity=false, _ATOMIC_HAS_OCCURRED_$$pos=false, _ATOMIC_HAS_OCCURRED_$$vel=false, _READ_HAS_OCCURRED_$$localPos=false, _READ_HAS_OCCURRED_$$newPosition=false, _READ_HAS_OCCURRED_$$newVelocity=false, _READ_HAS_OCCURRED_$$pos=false, _READ_HAS_OCCURRED_$$vel=false, _TRACKING=true, _WRITE_HAS_OCCURRED_$$localPos=true, _WRITE_HAS_OCCURRED_$$newPosition=false, _WRITE_HAS_OCCURRED_$$newVelocity=false, _WRITE_HAS_OCCURRED_$$pos=false, _WRITE_HAS_OCCURRED_$$vel=false, _WRITE_READ_BENIGN_FLAG_$$localPos=false, v0$1=512bv32, v0$2=0bv32, v1$1=0bv32, v1$2=0bv32, v10$1=0bv32, v10$2=0bv32, v11$1=1bv32, v11$2=0bv32, v2=256bv32, v7=true, v8$1=0bv32, v8$2=0bv32, v9$1=0bv32, v9$2=0bv32]

[2017-09-08 22:16:49,604 INFO  L164             ResultUtil]:   - PositiveResult [Line: 436]: procedure precondition always holds
[2017-09-08 22:16:49,604 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,604 INFO  L164             ResultUtil]:   - PositiveResult [Line: 443]: procedure precondition always holds
[2017-09-08 22:16:49,604 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location
[2017-09-08 22:16:49,604 INFO  L164             ResultUtil]:   - PositiveResult [Line: 659]: procedure precondition always holds
[2017-09-08 22:16:49,604 INFO  L168             ResultUtil]:     For all program executions holds that procedure precondition always holds at this location