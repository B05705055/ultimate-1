// heizmann@informatik.uni-freiburg.de 27.1.2011
// Example where emptiness test using petri nets is more efficient than
// emptiness test using finite automata.

//#IsNotEmpty concurrentProduct(petriNet(a1) a2)
//#IsNotEmpty concurrentProductAutomaton(a1 a2)
//#IsEmpty concurrentProduct(concurrentProduct(concurrentProduct(petriNet(e1) e2) e3) e4)
//#IsEmpty concurrentProductAutomaton(concurrentProductAutomaton(concurrentProductAutomaton(e1 e2) e3) e4)

//#IsEmpty concurrentProduct(concurrentProduct(concurrentProduct(petriNet(e1) e2) e3) e4)
#IsEmpty concurrentProductAutomaton(concurrentProductAutomaton(concurrentProductAutomaton(e1 e2) e3) e4)

//#Print concurrentProductAutomaton(a3 a4)
//#Print concurrentProduct(petriNet(a3) a4)


#nwa a1 := (
  #callAlphabet := {},
  #internalAlphabet := {a0 a1 a2 a3 a4 a5 a6 a7},
  #returnAlphabet := {},
  #states := {p0 p1 p2 p3 p4 p5 p6 p7},
  #initialStates := {p0},
  #finalStates := {p7},
  #callTransitions := {},
  #internalTransitions := {
      (p0 a0 p1)
      (p1 a0 p2)
      (p2 a0 p3)
      (p3 a0 p4)
      (p4 a0 p5)
      (p5 a0 p6)
      (p6 a0 p7)

  }, 
  #returnTransitions := {}
)

#nwa a2 := (
  #callAlphabet := {},
  #internalAlphabet := {b0 b1 b2 b3 b4 b5 b6 b7},
  #returnAlphabet := {},
  #states := {q0 q1 q2 q3 q4 q5 q6 q7},
  #initialStates := {q0},
  #finalStates := {q7},
  #callTransitions := {},
  #internalTransitions := {
      (q0 b0 q1)
      (q1 b0 q2)
      (q2 b0 q3)
      (q3 b0 q4)
      (q4 b0 q5)
      (q5 b0 q6)
      (q6 b0 q7)

  }, 
  #returnTransitions := {}
)




#nwa e1 := (
  #callAlphabet := {},
  #internalAlphabet := {a 0 1},
  #returnAlphabet := {},
  #states := { p0
               p1
               p2
               p3
               p4
               p5
               p6
               p7
               p8
               p9
               p10
               p11
               p12
               p13
               p14
               p15
               p16
               p17
               p18
               p19
               pe0
               pe1
               pe2
               pe3},
  #initialStates := {p0},
  #finalStates := {pe3},
  #callTransitions := {},
  #internalTransitions := {
      (p0 a p1)
      (p1 a p2)
      (p2 a p3)
      (p3 a p4)
      (p4 a p5)
      (p5 a p6)
      (p6 a p7)
      (p7 a p8)
      (p8 a p9)
      (p9 a p10)
      (p10 a p11)
      (p11 a p12)
      (p12 a p13)
      (p13 a p14)
      (p14 a p15)
      (p15 a p16)
      (p16 a p17)
      (p17 a p18)
      (p18 a p19)
      (p19 a pe0)
      (pe0 0 pe1)
      (pe1 0 pe2)
      (pe2 0 pe3)

  }, 
  #returnTransitions := {}
)

#nwa e2 := (
  #callAlphabet := {},
  #internalAlphabet := {b 0 1},
  #returnAlphabet := {},
  #states := { q0
               q1
               q2
               q3
               q4
               q5
               q6
               q7
               q8
               q9
               q10
               q11
               q12
               q13
               q14
               q15
               q16
               q17
               q18
               q19
               qe0
               qe1
               qe2
               qe3},
  #initialStates := {q0},
  #finalStates := {qe3},
  #callTransitions := {},
  #internalTransitions := {
      (q0 b q1)
      (q1 b q2)
      (q2 b q3)
      (q3 b q4)
      (q4 b q5)
      (q5 b q6)
      (q6 b q7)
      (q7 b q8)
      (q8 b q9)
      (q9 b q10)
      (q10 b q11)
      (q11 b q12)
      (q12 b q13)
      (q13 b q14)
      (q14 b q15)
      (q15 b q16)
      (q16 b q17)
      (q17 b q18)
      (q18 b q19)
      (q19 b qe0)
      (qe0 1 qe1)
      (qe1 0 qe2)
      (qe2 0 qe3)

  }, 
  #returnTransitions := {}
)




#nwa e3 := (
  #callAlphabet := {},
  #internalAlphabet := {c 0 1},
  #returnAlphabet := {},
  #states := { r0
               r1
               r2
               r3
               r4
               r5
               r6
               r7
               r8
               r9
               r10
               r11
               r12
               r13
               r14
               r15
               r16
               r17
               r18
               r19
               re0
               re1
               re2
               re3},
  #initialStates := {r0},
  #finalStates := {re3},
  #callTransitions := {},
  #internalTransitions := {
      (r0 c r1)
      (r1 c r2)
      (r2 c r3)
      (r3 c r4)
      (r4 c r5)
      (r5 c r6)
      (r6 c r7)
      (r7 c r8)
      (r8 c r9)
      (r9 c r10)
      (r10 c r11)
      (r11 c r12)
      (r12 c r13)
      (r13 c r14)
      (r14 c r15)
      (r15 c r16)
      (r16 c r17)
      (r17 c r18)
      (r18 c r19)
      (r19 c re0)
      (re0 0 re1)
      (re1 1 re2)
      (re2 0 re3)

  }, 
  #returnTransitions := {}
)


#nwa e4 := (
  #callAlphabet := {},
  #internalAlphabet := {d 0 1},
  #returnAlphabet := {},
  #states := { s0
               s1
               s2
               s3
               s4
               s5
               s6
               s7
               s8
               s9
               s10
               s11
               s12
               s13
               s14
               s15
               s16
               s17
               s18
               s19
               se0
               se1
               se2
               se3},
  #initialStates := {s0},
  #finalStates := {se3},
  #callTransitions := {},
  #internalTransitions := {
      (s0 d s1)
      (s1 d s2)
      (s2 d s3)
      (s3 d s4)
      (s4 d s5)
      (s5 d s6)
      (s6 d s7)
      (s7 d s8)
      (s8 d s9)
      (s9 d s10)
      (s10 d s11)
      (s11 d s12)
      (s12 d s13)
      (s13 d s14)
      (s14 d s15)
      (s15 d s16)
      (s16 d s17)
      (s17 d s18)
      (s18 d s19)
      (s19 d se0)
      (se0 1 se1)
      (se1 1 se2)
      (se2 0 se3)

  }, 
  #returnTransitions := {}
)
