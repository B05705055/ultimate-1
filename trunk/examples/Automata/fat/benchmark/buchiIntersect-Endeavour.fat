// Author: heizmann@informatik.uni-freiburg.de
// Date: 16.5.2011

// Contains applications of in filename mentioned operation on several
// automata.
//
// Correctness of these operations is not tested here. But you can use this
// file to test correctness of intersection by enabling the automatic
// correctness test for automaton operations is Ultimate.
//
// This file contains some automaton definitions which have been available in 
// other files on 16.05.2011. (At his day Space Shuttle Endeavour started for
// its final mission)

#NotAcceptsBuchi buchiIntersect(nonNestedBuchi1 nonNestedBuchi2) [  ,  ]
#NotAcceptsBuchi buchiIntersect(cKistner cKistnerSelfLoopFree) [  ,  ]
#NotAcceptsBuchi buchiIntersect(finitelyManyA finitelyManyB) [  ,  ]
#NotAcceptsBuchi buchiIntersect(infinitelyManyA infinitelyManyB) [  ,  ]



#nwa nonNestedBuchi1 := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {s0 s1},
  #initialStates := {s0},
  #finalStates := {s0},
  #callTransitions := { },
  #internalTransitions := {(s0 a s1) (s1 a s0)}, 
  #returnTransitions := { }
)

#nwa nonNestedBuchi2 := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {s0 s1 s2},
  #initialStates := {s0},
  #finalStates := {s1},
  #callTransitions := { },
  #internalTransitions := {(s0 a s1) (s1 a s2) (s2 a s0)}, 
  #returnTransitions := { }
)

#nwa cKistner := (
  #callAlphabet := { c },
  #internalAlphabet := {a b},
  #returnAlphabet := { r },
  #states := {s0 s1 s2},
  #initialStates := {s0},
  #finalStates := {s1},
  #callTransitions := { (s0 c s0) },
  #internalTransitions := {(s0 a s1) }, 
  #returnTransitions := { (s1 s0 r s2) (s2 s0 r s0) }
)

#nwa cKistnerSelfLoopFree := (
  #callAlphabet := { c },
  #internalAlphabet := {a b},
  #returnAlphabet := { r },
  #states := {s0 r0 r1 s1 s2},
  #initialStates := {s0},
  #finalStates := {s1},
  #callTransitions := { (s0 c r0) (r0 c r1)  },
  #internalTransitions := {(r1 a s1) }, 
  #returnTransitions := { (s1 r0 r s2) (s2 s0 r s0) }
)


#nwa finitelyManyA := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {q0 q1},
  #initialStates := {q0},
  #finalStates := {q1},
  #callTransitions := { },
  #internalTransitions := { (q0 a q0) (q0 b q0) (q0 b q1) (q1 b q1) }, 
  #returnTransitions := { }
)

#nwa finitelyManyB := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {q0 q1},
  #initialStates := {q0},
  #finalStates := {q1},
  #callTransitions := { },
  #internalTransitions := { (q0 b q0) (q0 a q0) (q0 a q1) (q1 a q1) }, 
  #returnTransitions := { }
)




#nwa infinitelyManyA := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {q0 q1},
  #initialStates := {q0},
  #finalStates := {q1},
  #callTransitions := { },
  #internalTransitions := { (q0 a q1) (q0 b q0) (q1 a q1) (q1 b q0) }, 
  #returnTransitions := { }
)

#nwa infinitelyManyB := (
  #callAlphabet := { },
  #internalAlphabet := {a b},
  #returnAlphabet := { },
  #states := {q0 q1},
  #initialStates := {q0},
  #finalStates := {q1},
  #callTransitions := { },
  #internalTransitions := { (q0 b q1) (q0 a q0) (q1 b q1) (q1 a q0) }, 
  #returnTransitions := { }
)