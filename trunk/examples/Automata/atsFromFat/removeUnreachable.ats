// Author: heizmann@informatik.uni-freiburg.de
// Date: 12.05.2013

//parseAutomata("sas09.ats");

print(removeUnreachable(a1));
//print(removeUnreachable(Amod2));
//print(removeUnreachable(joiningComponents2));

//print(reachableStatesCopy(a1));
//print(reachableStatesCopy(A1));


NestedWordAutomaton repeatedlyjoiningComponents = (
  callAlphabet = { },
  internalAlphabet = { a b c d},
  returnAlphabet = { },
  states = {p0 p1 p2 p3 q0 q1 s0 s1 r1 r2},
  initialStates = {p0 p1},
  finalStates = {p4},
  callTransitions = {},
  internalTransitions = {
	(p0 a p1)
	(p1 b p2)
	(p2 c p3)
	(p0 d p2)
  },
  returnTransitions = {}
);


NestedWordAutomaton joiningComponents2 = (
  callAlphabet = { },
  internalAlphabet = { a b c d},
  returnAlphabet = { },
  states = {p0 p1 p2 q0 q1 q2 s1 s2},
  initialStates = {p0 q0},
  finalStates = {s2},
  callTransitions = {},
  internalTransitions = {
	(p0 a p1)
	(p1 a p2)
	(q0 b q1)
	(q1 b q2)
	(q0 c p1)
	(p0 c q1)
	(p2 d s1)
	(q2 d s1)
	(s1 d s2)
	(s2 d p0)
  },
  returnTransitions = {}
);



NestedWordAutomaton joiningComponents = (
  callAlphabet = { },
  internalAlphabet = { a b c d},
  returnAlphabet = { },
  states = {p0 p1 p2 p3 p4},
  initialStates = {p0 p1},
  finalStates = {p4},
  callTransitions = {},
  internalTransitions = {
	(p0 a p2)
	(p1 b p2)
	(p2 c p3)
	(p3 d p4)
  },
  returnTransitions = {}
);




NestedWordAutomaton Amod2 = (
  callAlphabet = { },
  internalAlphabet = { "0" "1"},
  returnAlphabet = { },
  states = {p0 p1},
  initialStates = {p0},
  finalStates = {p0},
  callTransitions = {},
  internalTransitions = {
	(p0 "0" p0)
	(p0 "1" p1)
	(p1 "0" p0)
	(p1 "1" p1)},
  returnTransitions = {}
);

NestedWordAutomaton a1 = (
  callAlphabet = {a b},
  internalAlphabet = {a b},
  returnAlphabet = {a b},
  states = {q0 q1},
  initialStates = {q0},
  finalStates = {q1},
  callTransitions = {(q0 a q0) (q0 a q1)},
  internalTransitions = {}, 
  returnTransitions = {(q1 q0 b q1)}
);