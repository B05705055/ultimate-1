// Author: heizmann@informatik.uni-freiburg.de
// Date: 2015-04-25
//

NestedWordAutomaton Amod3 = (
  callAlphabet = { },
  internalAlphabet = { "0" "1" },
  returnAlphabet = { },
  states = {q0 q1 q2 },
  initialStates = {q0},
  finalStates = {q0},
  callTransitions = {},
  internalTransitions = {
	(q0 "0" q0)
	(q0 "1" q1)
	(q1 "0" q2)
	(q1 "1" q0)
	(q2 "0" q1)
	(q2 "1" q2)},
  returnTransitions = {}
);

print(loopComplexity(Amod3));




// Test loop complexity with random automata
	// First argument: size of alphabet
	// Second argument: number of states
	// Third argument: transition density of internal transitions in per mille
	// Fourth argument: transition density of call transitions in per mille -- use 0 here
	// Fifth argument: transition density of return transitions in per mille -- use 0 here
	// Sixth argument: amount of accepting states in per mille
	int i = 0;
	while(i<2){
		NestedWordAutomaton A = getRandomNwa(7, 2, 500, 0, 0, 10);
		print(A);
		print(loopComplexity(A));
		i++;
	}
