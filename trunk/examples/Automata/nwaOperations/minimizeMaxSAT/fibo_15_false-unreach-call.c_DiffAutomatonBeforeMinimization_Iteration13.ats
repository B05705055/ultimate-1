// Testfile dumped by Ultimate at 2016/02/26 01:55:28
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {c0 c1 c2 c3 c4 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 },
	returnAlphabet = {r0 r1 r2 r3 r4 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 },
	initialStates = {s63 },
	finalStates = {s29 },
	callTransitions = {
		 (s3 c3 s69)
		 (s13 c3 s69)
		 (s63 c4 s64)
		 (s66 c0 s67)
		 (s68 c1 s69)
		 (s75 c2 s69)
		 (s77 c3 s69)
		 (s78 c3 s69)
		 (s82 c3 s69)
		 (s86 c3 s69)
	},
	internalTransitions = {
		 (s0 a15 s1)
		 (s1 a16 s2)
		 (s4 a15 s5)
		 (s5 a16 s6)
		 (s7 a15 s8)
		 (s8 a16 s9)
		 (s10 a15 s11)
		 (s11 a16 s12)
		 (s14 a15 s15)
		 (s15 a16 s16)
		 (s17 a15 s18)
		 (s18 a16 s19)
		 (s20 a15 s21)
		 (s21 a16 s22)
		 (s23 a15 s24)
		 (s24 a16 s25)
		 (s26 a3 s27)
		 (s27 a4 s28)
		 (s28 a5 s29)
		 (s30 a15 s31)
		 (s31 a16 s32)
		 (s33 a15 s35)
		 (s34 a15 s36)
		 (s35 a16 s37)
		 (s36 a16 s38)
		 (s39 a15 s40)
		 (s40 a16 s41)
		 (s42 a15 s43)
		 (s43 a16 s44)
		 (s45 a15 s47)
		 (s46 a15 s48)
		 (s47 a16 s49)
		 (s48 a16 s50)
		 (s51 a15 s52)
		 (s52 a16 s53)
		 (s54 a15 s55)
		 (s55 a16 s56)
		 (s57 a15 s58)
		 (s58 a16 s59)
		 (s60 a15 s61)
		 (s61 a16 s62)
		 (s64 a0 s65)
		 (s67 a2 s68)
		 (s69 a10 s70)
		 (s70 a11 s71)
		 (s70 a12 s72)
		 (s71 a16 s73)
		 (s72 a13 s74)
		 (s72 a14 s75)
		 (s74 a16 s76)
		 (s79 a15 s80)
		 (s80 a16 s81)
		 (s83 a15 s84)
		 (s84 a16 s85)
	},
	returnTransitions = {
		 (s2 s75 r3 s3)
		 (s2 s3 r4 s39)
		 (s2 s77 r4 s4)
		 (s2 s78 r4 s34)
		 (s2 s82 r4 s39)
		 (s2 s13 r4 s39)
		 (s2 s86 r4 s57)
		 (s6 s75 r3 s3)
		 (s6 s3 r4 s42)
		 (s6 s77 r4 s7)
		 (s6 s78 r4 s34)
		 (s6 s82 r4 s42)
		 (s6 s13 r4 s42)
		 (s6 s86 r4 s46)
		 (s9 s75 r3 s3)
		 (s9 s3 r4 s23)
		 (s9 s77 r4 s7)
		 (s9 s78 r4 s34)
		 (s9 s82 r4 s23)
		 (s9 s13 r4 s23)
		 (s9 s86 r4 s46)
		 (s12 s75 r3 s13)
		 (s12 s3 r4 s14)
		 (s12 s77 r4 s14)
		 (s12 s82 r4 s14)
		 (s12 s13 r4 s14)
		 (s12 s86 r4 s51)
		 (s16 s75 r3 s3)
		 (s16 s3 r4 s17)
		 (s16 s77 r4 s17)
		 (s16 s82 r4 s17)
		 (s16 s13 r4 s17)
		 (s16 s86 r4 s60)
		 (s19 s75 r3 s3)
		 (s19 s3 r4 s20)
		 (s19 s77 r4 s20)
		 (s19 s82 r4 s20)
		 (s19 s13 r4 s20)
		 (s19 s86 r4 s54)
		 (s22 s75 r3 s3)
		 (s22 s3 r4 s23)
		 (s22 s77 r4 s23)
		 (s22 s82 r4 s23)
		 (s22 s13 r4 s23)
		 (s22 s86 r4 s46)
		 (s25 s68 r2 s26)
		 (s25 s75 r3 s3)
		 (s25 s3 r4 s23)
		 (s25 s77 r4 s23)
		 (s25 s78 r4 s34)
		 (s25 s82 r4 s23)
		 (s25 s13 r4 s23)
		 (s25 s86 r4 s46)
		 (s32 s75 r3 s86)
		 (s32 s3 r4 s33)
		 (s32 s77 r4 s33)
		 (s32 s78 r4 s34)
		 (s32 s82 r4 s33)
		 (s32 s13 r4 s33)
		 (s37 s75 r3 s3)
		 (s37 s3 r4 s39)
		 (s37 s77 r4 s39)
		 (s37 s78 r4 s34)
		 (s37 s82 r4 s39)
		 (s37 s13 r4 s39)
		 (s37 s86 r4 s57)
		 (s38 s75 r3 s3)
		 (s38 s3 r4 s14)
		 (s38 s77 r4 s14)
		 (s38 s82 r4 s14)
		 (s38 s13 r4 s14)
		 (s38 s86 r4 s51)
		 (s41 s75 r3 s3)
		 (s41 s3 r4 s42)
		 (s41 s77 r4 s42)
		 (s41 s78 r4 s34)
		 (s41 s82 r4 s42)
		 (s41 s13 r4 s42)
		 (s41 s86 r4 s46)
		 (s44 s75 r3 s3)
		 (s44 s3 r4 s23)
		 (s44 s77 r4 s23)
		 (s44 s78 r4 s34)
		 (s44 s82 r4 s23)
		 (s44 s13 r4 s23)
		 (s44 s86 r4 s46)
		 (s49 s75 r3 s13)
		 (s49 s3 r4 s23)
		 (s49 s77 r4 s23)
		 (s49 s78 r4 s34)
		 (s49 s82 r4 s23)
		 (s49 s13 r4 s23)
		 (s49 s86 r4 s46)
		 (s50 s75 r3 s3)
		 (s50 s3 r4 s23)
		 (s50 s77 r4 s23)
		 (s50 s78 r4 s34)
		 (s50 s82 r4 s23)
		 (s50 s13 r4 s23)
		 (s53 s75 r3 s3)
		 (s53 s3 r4 s17)
		 (s53 s77 r4 s17)
		 (s53 s82 r4 s17)
		 (s53 s13 r4 s17)
		 (s56 s75 r3 s3)
		 (s56 s3 r4 s23)
		 (s56 s77 r4 s23)
		 (s56 s82 r4 s23)
		 (s56 s13 r4 s23)
		 (s59 s75 r3 s3)
		 (s59 s3 r4 s42)
		 (s59 s77 r4 s42)
		 (s59 s78 r4 s34)
		 (s59 s82 r4 s42)
		 (s59 s13 r4 s42)
		 (s62 s75 r3 s3)
		 (s62 s3 r4 s20)
		 (s62 s77 r4 s20)
		 (s62 s82 r4 s20)
		 (s62 s13 r4 s20)
		 (s65 s63 r0 s66)
		 (s73 s75 r3 s77)
		 (s73 s3 r4 s23)
		 (s73 s77 r4 s79)
		 (s73 s78 r4 s10)
		 (s73 s82 r4 s79)
		 (s73 s13 r4 s45)
		 (s73 s86 r4 s46)
		 (s76 s75 r3 s78)
		 (s76 s3 r4 s30)
		 (s76 s77 r4 s83)
		 (s76 s82 r4 s30)
		 (s76 s13 r4 s30)
		 (s81 s75 r3 s82)
		 (s81 s3 r4 s23)
		 (s81 s77 r4 s79)
		 (s81 s78 r4 s34)
		 (s81 s82 r4 s79)
		 (s81 s13 r4 s23)
		 (s81 s86 r4 s46)
		 (s85 s75 r3 s86)
		 (s85 s3 r4 s33)
		 (s85 s77 r4 s0)
		 (s85 s78 r4 s34)
		 (s85 s82 r4 s33)
		 (s85 s13 r4 s33)
	}
);

print(numberOfStates(minimizeSevpa(removeDeadEnds(nwa))));
print(numberOfStates(shrinkNwa(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat2(removeDeadEnds(nwa))));
