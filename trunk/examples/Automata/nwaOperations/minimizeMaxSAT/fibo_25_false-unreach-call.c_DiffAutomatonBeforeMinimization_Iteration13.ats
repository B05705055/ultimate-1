// Testfile dumped by Ultimate at 2016/02/26 01:57:12
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {c0 c1 c2 c3 c4 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 },
	returnAlphabet = {r0 r1 r2 r3 r4 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 },
	initialStates = {s0 },
	finalStates = {s52 },
	callTransitions = {
		 (s0 c4 s1)
		 (s3 c0 s4)
		 (s5 c1 s6)
		 (s12 c2 s6)
		 (s14 c3 s15)
		 (s17 c3 s18)
		 (s23 c3 s18)
		 (s27 c3 s28)
		 (s34 c3 s6)
		 (s38 c3 s6)
		 (s45 c3 s6)
	},
	internalTransitions = {
		 (s1 a0 s2)
		 (s4 a2 s5)
		 (s6 a10 s7)
		 (s7 a11 s8)
		 (s7 a12 s9)
		 (s8 a16 s10)
		 (s9 a13 s11)
		 (s9 a14 s12)
		 (s11 a16 s13)
		 (s15 a10 s16)
		 (s16 a11 s8)
		 (s18 a10 s19)
		 (s19 a11 s8)
		 (s20 a15 s21)
		 (s21 a16 s22)
		 (s24 a15 s25)
		 (s25 a16 s26)
		 (s28 a10 s29)
		 (s29 a12 s30)
		 (s30 a13 s11)
		 (s31 a15 s32)
		 (s32 a16 s33)
		 (s35 a15 s36)
		 (s36 a16 s37)
		 (s39 a15 s41)
		 (s40 a15 s42)
		 (s41 a16 s43)
		 (s42 a16 s44)
		 (s46 a15 s47)
		 (s47 a16 s48)
		 (s49 a3 s50)
		 (s50 a4 s51)
		 (s51 a5 s52)
		 (s53 a15 s54)
		 (s54 a16 s55)
		 (s56 a15 s57)
		 (s57 a16 s58)
		 (s59 a15 s61)
		 (s60 a15 s62)
		 (s61 a16 s63)
		 (s62 a16 s64)
		 (s65 a15 s67)
		 (s66 a15 s68)
		 (s67 a16 s69)
		 (s68 a16 s70)
	},
	returnTransitions = {
		 (s2 s0 r0 s3)
		 (s10 s12 r3 s14)
		 (s10 s17 r4 s24)
		 (s10 s34 r4 s39)
		 (s10 s38 r4 s40)
		 (s10 s23 r4 s35)
		 (s10 s14 r4 s20)
		 (s10 s45 r4 s46)
		 (s13 s12 r3 s17)
		 (s13 s38 r4 s31)
		 (s13 s27 r4 s31)
		 (s13 s45 r4 s31)
		 (s22 s12 r3 s23)
		 (s22 s34 r4 s39)
		 (s22 s38 r4 s40)
		 (s22 s45 r4 s46)
		 (s26 s12 r3 s27)
		 (s26 s34 r4 s59)
		 (s26 s38 r4 s60)
		 (s26 s45 r4 s60)
		 (s33 s12 r3 s34)
		 (s33 s38 r4 s53)
		 (s33 s45 r4 s53)
		 (s37 s12 r3 s38)
		 (s37 s34 r4 s39)
		 (s37 s38 r4 s40)
		 (s37 s45 r4 s46)
		 (s43 s12 r3 s45)
		 (s43 s38 r4 s46)
		 (s43 s45 r4 s46)
		 (s44 s12 r3 s38)
		 (s44 s34 r4 s39)
		 (s44 s38 r4 s40)
		 (s44 s45 r4 s46)
		 (s48 s5 r2 s49)
		 (s48 s12 r3 s45)
		 (s48 s34 r4 s39)
		 (s48 s38 r4 s46)
		 (s48 s45 r4 s46)
		 (s55 s12 r3 s45)
		 (s55 s34 r4 s39)
		 (s55 s38 r4 s56)
		 (s55 s45 r4 s56)
		 (s58 s12 r3 s45)
		 (s58 s34 r4 s39)
		 (s58 s38 r4 s46)
		 (s58 s45 r4 s46)
		 (s63 s12 r3 s45)
		 (s63 s38 r4 s65)
		 (s63 s45 r4 s65)
		 (s64 s12 r3 s45)
		 (s64 s34 r4 s66)
		 (s64 s38 r4 s65)
		 (s64 s45 r4 s65)
		 (s69 s12 r3 s45)
		 (s69 s34 r4 s39)
		 (s69 s38 r4 s46)
		 (s69 s45 r4 s46)
		 (s70 s12 r3 s45)
		 (s70 s38 r4 s46)
		 (s70 s45 r4 s46)
	}
);

print(numberOfStates(minimizeSevpa(removeDeadEnds(nwa))));
print(numberOfStates(shrinkNwa(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat(removeDeadEnds(nwa))));
