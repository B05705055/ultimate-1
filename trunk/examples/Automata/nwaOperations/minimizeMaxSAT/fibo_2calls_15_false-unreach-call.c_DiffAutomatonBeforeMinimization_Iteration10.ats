// Testfile dumped by Ultimate at 2016/02/26 01:58:36
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {c0 c1 c2 c3 c4 c5 c6 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 a21 a22 a23 },
	returnAlphabet = {r0 r1 r2 r3 r4 r5 r6 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 },
	initialStates = {s59 },
	finalStates = {s31 },
	callTransitions = {
		 (s1 c2 s65)
		 (s2 c2 s65)
		 (s3 c2 s65)
		 (s17 c4 s73)
		 (s18 c4 s73)
		 (s59 c5 s60)
		 (s62 c6 s63)
		 (s64 c0 s65)
		 (s71 c3 s73)
		 (s79 c1 s65)
		 (s80 c4 s73)
		 (s82 c4 s73)
		 (s83 c2 s65)
	},
	internalTransitions = {
		 (s4 a9 s5)
		 (s5 a10 s6)
		 (s7 a21 s11)
		 (s8 a21 s12)
		 (s9 a21 s13)
		 (s10 a21 s11)
		 (s11 a22 s14)
		 (s12 a22 s15)
		 (s13 a22 s16)
		 (s19 a9 s22)
		 (s20 a9 s23)
		 (s21 a9 s24)
		 (s22 a10 s25)
		 (s23 a10 s26)
		 (s24 a10 s27)
		 (s28 a6 s29)
		 (s29 a8 s30)
		 (s30 a11 s31)
		 (s32 a21 s34)
		 (s33 a21 s35)
		 (s34 a22 s36)
		 (s35 a22 s37)
		 (s38 a9 s39)
		 (s39 a10 s40)
		 (s41 a21 s12)
		 (s42 a9 s86)
		 (s43 a9 s22)
		 (s44 a21 s47)
		 (s45 a21 s48)
		 (s46 a21 s47)
		 (s47 a22 s49)
		 (s48 a22 s50)
		 (s51 a9 s39)
		 (s52 a9 s24)
		 (s53 a21 s54)
		 (s54 a22 s55)
		 (s56 a9 s57)
		 (s57 a10 s58)
		 (s60 a0 s61)
		 (s63 a4 s64)
		 (s65 a23 s66)
		 (s66 a1 s67)
		 (s66 a3 s68)
		 (s67 a10 s69)
		 (s68 a5 s70)
		 (s68 a7 s71)
		 (s70 a10 s72)
		 (s73 a16 s74)
		 (s74 a17 s75)
		 (s74 a18 s76)
		 (s75 a22 s77)
		 (s76 a19 s78)
		 (s76 a20 s79)
		 (s78 a22 s81)
		 (s84 a9 s86)
		 (s85 a9 s87)
		 (s86 a10 s88)
		 (s87 a10 s0)
	},
	returnTransitions = {
		 (s0 s79 r1 s2)
		 (s0 s1 r2 s44)
		 (s0 s2 r2 s44)
		 (s0 s3 r2 s45)
		 (s0 s83 r2 s46)
		 (s6 s79 r1 s2)
		 (s6 s1 r2 s8)
		 (s6 s2 r2 s8)
		 (s6 s3 r2 s9)
		 (s6 s83 r2 s53)
		 (s14 s71 r3 s17)
		 (s14 s17 r4 s42)
		 (s14 s18 r4 s43)
		 (s14 s80 r4 s84)
		 (s14 s82 r4 s85)
		 (s15 s71 r3 s18)
		 (s15 s17 r4 s43)
		 (s15 s18 r4 s43)
		 (s15 s80 r4 s19)
		 (s15 s82 r4 s85)
		 (s16 s71 r3 s18)
		 (s16 s17 r4 s52)
		 (s16 s18 r4 s52)
		 (s16 s80 r4 s21)
		 (s16 s82 r4 s20)
		 (s25 s64 r0 s28)
		 (s25 s79 r1 s2)
		 (s25 s1 r2 s8)
		 (s25 s2 r2 s8)
		 (s25 s3 r2 s9)
		 (s25 s83 r2 s41)
		 (s26 s79 r1 s2)
		 (s26 s1 r2 s44)
		 (s26 s2 r2 s44)
		 (s26 s83 r2 s46)
		 (s27 s79 r1 s2)
		 (s27 s1 r2 s8)
		 (s27 s2 r2 s8)
		 (s27 s83 r2 s41)
		 (s36 s71 r3 s18)
		 (s36 s17 r4 s51)
		 (s36 s18 r4 s51)
		 (s36 s80 r4 s38)
		 (s36 s82 r4 s85)
		 (s37 s71 r3 s18)
		 (s37 s17 r4 s51)
		 (s37 s18 r4 s51)
		 (s37 s80 r4 s4)
		 (s37 s82 r4 s85)
		 (s40 s79 r1 s2)
		 (s40 s1 r2 s8)
		 (s40 s2 r2 s8)
		 (s40 s3 r2 s9)
		 (s40 s83 r2 s41)
		 (s49 s71 r3 s18)
		 (s49 s17 r4 s51)
		 (s49 s18 r4 s51)
		 (s49 s80 r4 s38)
		 (s50 s71 r3 s18)
		 (s50 s17 r4 s52)
		 (s50 s18 r4 s52)
		 (s50 s80 r4 s21)
		 (s55 s71 r3 s18)
		 (s55 s17 r4 s43)
		 (s55 s18 r4 s43)
		 (s55 s80 r4 s56)
		 (s55 s82 r4 s85)
		 (s58 s79 r1 s2)
		 (s58 s1 r2 s8)
		 (s58 s2 r2 s8)
		 (s58 s3 r2 s9)
		 (s58 s83 r2 s53)
		 (s61 s59 r5 s62)
		 (s69 s79 r1 s83)
		 (s69 s1 r2 s7)
		 (s69 s2 r2 s8)
		 (s69 s3 r2 s9)
		 (s69 s83 r2 s10)
		 (s72 s79 r1 s3)
		 (s72 s1 r2 s32)
		 (s72 s2 r2 s32)
		 (s72 s83 r2 s33)
		 (s77 s71 r3 s80)
		 (s77 s17 r4 s42)
		 (s77 s18 r4 s43)
		 (s77 s80 r4 s84)
		 (s77 s82 r4 s85)
		 (s81 s71 r3 s82)
		 (s81 s17 r4 s51)
		 (s81 s18 r4 s51)
		 (s81 s80 r4 s4)
		 (s88 s79 r1 s1)
		 (s88 s1 r2 s7)
		 (s88 s2 r2 s8)
		 (s88 s3 r2 s9)
		 (s88 s83 r2 s10)
	}
);

print(numberOfStates(minimizeSevpa(removeDeadEnds(nwa))));
print(numberOfStates(shrinkNwa(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat2(removeDeadEnds(nwa))));
