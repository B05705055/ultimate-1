// Testfile dumped by Ultimate at 2016/02/26 01:55:08
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {c0 c1 c2 c3 c4 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 },
	returnAlphabet = {r0 r1 r2 r3 r4 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 s51 s52 s53 s54 s55 s56 s57 s58 s59 s60 s61 s62 s63 s64 s65 s66 s67 s68 s69 s70 s71 s72 s73 s74 s75 s76 s77 s78 s79 s80 s81 s82 s83 s84 s85 s86 s87 s88 s89 s90 s91 s92 s93 s94 s95 },
	initialStates = {s84 },
	finalStates = {s59 },
	callTransitions = {
		 (s0 c2 s90)
		 (s2 c3 s3)
		 (s5 c3 s90)
		 (s9 c3 s90)
		 (s16 c3 s17)
		 (s23 c3 s90)
		 (s30 c3 s17)
		 (s31 c3 s90)
		 (s35 c3 s38)
		 (s45 c2 s90)
		 (s49 c3 s38)
		 (s84 c4 s85)
		 (s87 c0 s88)
		 (s89 c1 s90)
	},
	internalTransitions = {
		 (s3 a10 s4)
		 (s4 a11 s92)
		 (s6 a15 s7)
		 (s7 a16 s8)
		 (s10 a15 s12)
		 (s11 a15 s13)
		 (s12 a16 s14)
		 (s13 a16 s15)
		 (s17 a10 s18)
		 (s18 a12 s19)
		 (s19 a13 s95)
		 (s20 a15 s21)
		 (s21 a16 s22)
		 (s24 a15 s26)
		 (s25 a15 s27)
		 (s26 a16 s28)
		 (s27 a16 s29)
		 (s32 a15 s33)
		 (s33 a16 s34)
		 (s36 a15 s39)
		 (s37 a15 s40)
		 (s38 a10 s41)
		 (s39 a16 s42)
		 (s40 a16 s43)
		 (s41 a12 s44)
		 (s44 a14 s45)
		 (s46 a15 s47)
		 (s47 a16 s48)
		 (s50 a15 s51)
		 (s51 a16 s52)
		 (s53 a15 s54)
		 (s54 a16 s55)
		 (s56 a3 s57)
		 (s57 a4 s58)
		 (s58 a5 s59)
		 (s60 a15 s61)
		 (s61 a16 s62)
		 (s63 a15 s64)
		 (s64 a16 s65)
		 (s66 a15 s68)
		 (s67 a15 s69)
		 (s68 a16 s70)
		 (s69 a16 s71)
		 (s72 a15 s75)
		 (s73 a15 s76)
		 (s74 a15 s77)
		 (s75 a16 s78)
		 (s76 a16 s79)
		 (s77 a16 s80)
		 (s81 a15 s82)
		 (s82 a16 s83)
		 (s85 a0 s86)
		 (s88 a2 s89)
		 (s90 a10 s91)
		 (s91 a11 s92)
		 (s91 a12 s93)
		 (s92 a16 s94)
		 (s93 a13 s95)
		 (s93 a14 s0)
		 (s95 a16 s1)
	},
	returnTransitions = {
		 (s1 s0 r3 s5)
		 (s1 s31 r4 s63)
		 (s1 s16 r4 s20)
		 (s1 s9 r4 s20)
		 (s1 s30 r4 s63)
		 (s8 s0 r3 s9)
		 (s8 s45 r3 s16)
		 (s8 s31 r4 s53)
		 (s8 s5 r4 s24)
		 (s8 s23 r4 s46)
		 (s8 s9 r4 s25)
		 (s14 s0 r3 s16)
		 (s14 s45 r3 s16)
		 (s14 s31 r4 s81)
		 (s14 s23 r4 s60)
		 (s15 s0 r3 s9)
		 (s15 s45 r3 s16)
		 (s15 s31 r4 s53)
		 (s15 s23 r4 s46)
		 (s22 s0 r3 s23)
		 (s22 s31 r4 s66)
		 (s22 s49 r4 s66)
		 (s28 s0 r3 s30)
		 (s28 s45 r3 s30)
		 (s28 s31 r4 s81)
		 (s28 s23 r4 s60)
		 (s29 s0 r3 s31)
		 (s29 s45 r3 s30)
		 (s29 s31 r4 s53)
		 (s29 s23 r4 s46)
		 (s34 s0 r3 s35)
		 (s34 s31 r4 s50)
		 (s34 s5 r4 s37)
		 (s34 s9 r4 s36)
		 (s42 s0 r3 s31)
		 (s42 s45 r3 s30)
		 (s42 s31 r4 s53)
		 (s43 s0 r3 s30)
		 (s43 s45 r3 s30)
		 (s43 s31 r4 s81)
		 (s48 s0 r3 s49)
		 (s48 s31 r4 s50)
		 (s48 s5 r4 s37)
		 (s48 s9 r4 s36)
		 (s52 s0 r3 s31)
		 (s52 s45 r3 s30)
		 (s52 s31 r4 s53)
		 (s52 s5 r4 s24)
		 (s52 s9 r4 s25)
		 (s55 s89 r2 s56)
		 (s55 s0 r3 s31)
		 (s55 s45 r3 s30)
		 (s55 s31 r4 s53)
		 (s55 s5 r4 s24)
		 (s55 s23 r4 s46)
		 (s55 s9 r4 s25)
		 (s62 s0 r3 s49)
		 (s62 s31 r4 s50)
		 (s62 s9 r4 s36)
		 (s65 s0 r3 s23)
		 (s65 s31 r4 s66)
		 (s65 s49 r4 s66)
		 (s65 s35 r4 s67)
		 (s65 s9 r4 s67)
		 (s70 s0 r3 s31)
		 (s70 s31 r4 s72)
		 (s70 s5 r4 s73)
		 (s70 s9 r4 s74)
		 (s71 s0 r3 s31)
		 (s71 s31 r4 s72)
		 (s78 s0 r3 s31)
		 (s78 s31 r4 s53)
		 (s78 s5 r4 s24)
		 (s78 s9 r4 s25)
		 (s79 s0 r3 s30)
		 (s79 s31 r4 s81)
		 (s80 s0 r3 s31)
		 (s80 s31 r4 s53)
		 (s83 s0 r3 s31)
		 (s83 s45 r3 s30)
		 (s83 s31 r4 s53)
		 (s83 s23 r4 s46)
		 (s83 s9 r4 s25)
		 (s86 s84 r0 s87)
		 (s94 s0 r3 s2)
		 (s94 s31 r4 s6)
		 (s94 s2 r4 s6)
		 (s94 s5 r4 s10)
		 (s94 s23 r4 s32)
		 (s94 s9 r4 s11)
	}
);

print(numberOfStates(minimizeSevpa(removeDeadEnds(nwa))));
print(numberOfStates(shrinkNwa(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat(removeDeadEnds(nwa))));
print(numberOfStates(minimizeNwaMaxSat2(removeDeadEnds(nwa))));
